<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Peter Licari</title>
<link>www.peterlicari.com/index.html</link>
<atom:link href="www.peterlicari.com/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.2.335</generator>
<lastBuildDate>Sat, 30 Dec 2023 05:00:00 GMT</lastBuildDate>
<item>
  <title>Some reflections, hopes, and plans for 2024</title>
  <dc:creator>Peter Licari</dc:creator>
  <link>www.peterlicari.com/posts/plans-for-2024/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="www.peterlicari.com/posts/plans-for-2024/images/persistence_of_future_plans.jpg" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">On the Persistence of Future Plans: AI Art (Copilot Designer)</figcaption><p></p>
</figure>
</div>
<p>2023 has just about come to a close. I thought I was due for an audit on how things went and where (I think) things are going.</p>
<section id="section" class="level2">
<h2 class="anchored" data-anchor-id="section">2023</h2>
<p>If you had asked me on January 1st what I’d expect to happen for the year, just about all of my predictions would be wrong. Some of the gaps reflect shocks and major stressors. I never would’ve guessed that I was going to be laid off and unemployed for 4 months. I never would’ve guessed that I’d need to buy a new (used) car so that my family can accommodate my work travel. I never would’ve guessed my mortgage would skyrocket thanks to Florida’s collapsing home insurance market. I never would’ve guessed that my HVAC unit would die on me. (Or, perhaps worse, that my Xbox One would too<sup>1</sup>.</p>
<p>But many of the gaps reflect genuine joys. I never would’ve guessed that my wife’s health would improve (in the jagged, stochastic way that only chronic illness can) enough that she’d be able to start working again. I’d never guess that I’d find genuine enjoyment, as well as personal and professional satisfaction, from working a full-time gig so ostensibly askance to my academic background. I’d never guess that I’d get the chance to also be entrepreneurial and use free time to work on some of my best, most meaningful research to date (I helped field a survey for the NYU Queer Data Lab and co-wrote<a href="https://www.neighborlyfaith.org/cn-report-2023">this report on a survey I consulted on with Neighborly Faith about Christian Nationalism</a> and religious pluralism in the US)—and that I’d get paid to do it. Fuck, honestly, I’d never guess that I’d have free time. And I did! Enough to finish nearly a dozen games, read/listen to about 70 books (Mangas count, damnit), train to run a respectable 5k time, pick-up writing for fun again, and make a useful R package! I never would’ve guessed at how deep my pride, love, and awe would stretch, watching my daughter grow into such a kind, sharp, adventurous, and forthright little human. She surprises me daily—and often more frequently than that—by her words and actions and also by how these things only deepen the reservoir of love I have for her. The greatest honor of my life is being her father.</p>
</section>
<section id="hopes" class="level2">
<h2 class="anchored" data-anchor-id="hopes">2024 Hopes</h2>
<p>I have some hopes for this year.</p>
<p>I’d really like to not get laid off again; that’d be nice.</p>
<p>I hope that I’ll continue to learn and find enjoyment in my work at Universal and to continue my consulting work. There are a few major expenses coming; I’m hoping that they’re spaced out in a way we can handle without adding more gray to my beard. We’re hoping to do some travel and my wife and I are hoping to spend more time together as a family—and I’m also hoping for quality time with family and friends too.</p>
<p>I’m hoping we get another good year of health with my elderly dog and aging cat. I’m hoping my wife’s health continues to improve and she finds her vocations fulfilling.</p>
<p>I’ve decided to run a half-matathon, I’m hoping for a new PR at the distance. Funny enough though, I’ve only ever ran <em>full</em> marathons—so a PR is gauranteed no matter how slow I go!</p>
<p>Speaking of running: After spending most of my ~20 year running career running shirtless and sunscreen-less under the increasingly fierce Florida sun, I’m finally taking care of my skin and seeing a dermatologist to assess the damage. It’s time to pay the piper; I’m hopeful his price ain’t too steep. (Seriously: wear your fucking sunscreen).</p>
<p>And, of course, I’m hopeful that my daughter continues to be happy, healthy, curious, and kind.</p>
<section id="about-the-whole-30-thing" class="level3">
<h3 class="anchored" data-anchor-id="about-the-whole-30-thing">About the whole 30 thing</h3>
<p>This next year marks the start of my 4th decade. I’m honestly more surprised by how little I’m phased about 30 being around the bend. I have a few friends who dreaded it; I’m pretty indifferent. People have been thinking I’m 30 since I was, like, 23 thanks to 1) my facial hair; 2) being in grad school; and 3) all the aforementioned shirtless running. So it’s almost feels like I’m stepping into the age that everyone’s assumed me to be anyhow. Though I’d be lying if I said that the increased prominence and density of gray hairs didn’t niggle me a little.</p>
<p>I have a pretty strong vision of what I want my life to look like by 40. And while I expect some of those details to change, I don’t think there’s going to be as much change in vision from 30-40 as there was from 15-25 or 20-30. For better or worse, the stressors of the last few years have really forced a lot of things into perspective. My professional goals are tied less to titles, employers, and technologies than they are to the types of work I’m doing, the broader skills I’m learning, and the kinds of folks I’m doing it with and for. But these aims are all now largely in the service of other aspirations. Most of the vision actually constitutes things what I hope my body looks like, how I hope it’ll function <em>vis</em> my running, exercise, and play; how much time and resources I can expend on things that replenish me like travel, hobbies, and time with loved ones; quality time and adventures spent with my family, being there for events milestones; the capacity and positionality I hope to have to serve others; dedication to spiritual practice (I hope to one day graduate from “a bad Quaker” to “not a bad Quaker”); and proximity to family to help them as they undergo their own transitions this next decade. But I’d call the vision strong in the same way that I’d refer to a van Gogh as strong: the impression is solid and vibrant; the essence unmistakable not “despite” the lack of precise detail but <strong>because</strong> of the lack of precise detail.</p>
</section>
</section>
<section id="goals-for-2024" class="level2">
<h2 class="anchored" data-anchor-id="goals-for-2024">Goals for 2024</h2>
<p>I do have some more measurable goals for 2024:</p>
<ol type="1">
<li>Ingest 100 books (manga, comics, and Great Courses count)</li>
<li>Listen to 200 new-to-me albums</li>
<li>Check in to Duolingo 100 times</li>
<li>Play 10-15 new games (board/tabletop games count)</li>
<li>Learn to cook 10-15 new recipes/foods (new cooking techniques to rehash old recipes count)</li>
<li>Watch 10-15 new-to-me movies</li>
<li>Watch 20-30 new/new-to me TV seasons.</li>
<li>Ingest 50 documentaries (YouTube videos count if they’re more than 20 minutes and educational; podcasts count if over 30 minutes)</li>
<li>Keep my weight between 150-160lbs</li>
<li>Run 1,200 miles</li>
<li>Visit the gym 50 times</li>
<li>Do 25 sessions of Yoga</li>
<li>Do 100 sessions of core</li>
<li>Run one race with a performance I’m proud of</li>
<li>Write 25-30 issues of Pulse of the Polis</li>
<li>Write 20-30 pieces of non-PotP content (blog posts, reviews, white/working papers, tutorials, poetry, micro-fiction, whatsver. So long as it took some effort to write)</li>
<li>Write 50 daily dairy entries</li>
<li>Post 50 things of value to others on LinkedIn</li>
<li>Attend at least one Quaker Meeting</li>
<li>Make 5-10 videos; one at least 5 minutes long.</li>
<li>Contribute to/make 3 open source/code projects.</li>
<li>Do 5-10 DIY projects (home repairs and improvements count so long as I’m the one actually doing them; digital art counts too so long as it’s something I’d hang in my house).</li>
<li>Have 15-20 coffee chats with long-distance friends new and old (actually seeing them counts too).</li>
</ol>
<p>These aren’t designed to be “resolutions.” If anything, they’re more like OKRs for my 2024. I fully expect to fail in a lot of these. Hell, maybe all of them. But in failing to hit these, I’ll still be doing things that are useful and meaningful to me. I love movies but I hardly watch them; the goal isn’t a limit or a chore but a return to something that I enjoy because I love overthinking pop culture—but I can’t <em>do that</em> if I don’t engage in pop culture! I love music; 200 albums is probably fewer than I’ve listened to <em>this</em> year and will help me on my own journey in drumming. And, you know what: 10 books read<sup>2</sup> is better than 0 and mindlessly scrolling Reddit. 10 newsletters are better than 0 and me not staying abreast the literature. 1 game is better than 0. (And since I bought a new Xbox, I’d best get some use out of the damn thing). 100 miles is better than 0. 1 friend seen is better than 0.</p>
<p>And in striving for these things, I’ll be improving habits that I’ve been working on for a while, like taking better notes of my day and of the things I’m reading, being present, showing myself love by taking care of myself and my body. And it serves to focus my efforts in those habits. It also helps me be more deliberate about my attention: I really don’t want my Reddit scrolling distance to be an appreciable fraction of the Earth’s fucking circumference. I’ll settle for an appreciable fraction of the length of a small country, though.</p>
</section>
<section id="some-sketching-of-production-strategy" class="level2">
<h2 class="anchored" data-anchor-id="some-sketching-of-production-strategy">Some sketching of production strategy</h2>
<p>I’ll close out with some thoughts and plans about my personal tech stack and content strategy for the year ahead. While I hate to make it sound like my life is a commodity and my hobbies must be orchestrated as if the ghost of Frederick Winslow Taylor was clocking my productivity, I think that it’s the best verbiage and framework for my life right now. At one point I was so “in” on my own “personal brand strategy” that I was too paralyzed to actually make all that much without extrinsic motivation. That made me miserable. So then I relaxed, but I became so lackadaisical that I didn’t make anything! And <strong><em>that</em></strong> made me miserable. Turns out moderation is both desirable but also hard? Who knew!</p>
<p>So here’s what I’m planning both for this year and the future (at least as of today):</p>
<ul>
<li>I’m investing in (both in terms of time and probably money) generative AI plan to help my tech development work, to make custom images to accompany/accelerate my creative outputs, and to act as an editor for all of the writing I’ll be doing. I plan on doing my own writing though, it’s generally pretty mediocre at actually executing on written creative works and I don’t want to write mediocre things. It can be decent to bounce ideas off of, but I’ve spent years developing my voice. I’m far too pot-invested to cede it to an AI. (Though you can bet your ass I’m having it write code documentation and elements of projects where serviceable English is sufficient).</li>
<li>I’m using Obsidian for my note taking, project sketching, and goal tracking. I may write a blog post about how I’ve set it up but that’s for another day.</li>
<li>I’ll be keeping Substack for now because I couldn’t afford to run PotP with the features I want on another platform. I’m hoping to make the newsletter self-sustaining (or at least worth investment due to other payoffs it provides) in the next year. I’m also hoping, within that time, the platform will change its position on its decision to profit from openly White supremacist publications<sup>3</sup>.</li>
<li>This blog is written in Quarto. That’s probably how I’ll be doing most of my technical writing. Vanilla markdown is what I’ll do for my other writing.</li>
<li>I’ll be writing “data journalism-y” things, my more direct and actionable tutorials, and my more timely reviews and (informed) thought pieces on Medium and its ilk. This is mostly for discovery: Medium is a highly-trafficked, well-indexed site.</li>
<li>Quick hits (like random data visuals and quick—but interesting—facts, helpful insights and realizations), will be published here and on Social Media. I’m thinking of posting video versions on TikTok (ugh, I’m gonna get on that I guess) and/or YT Shorts depending on the content. (Since TikTok is new for me and less about “channels”, I’ll post a more eclectic range of things. YT shorts will tend towards “infotainment” rather than code).<sup>4</sup></li>
<li>I’ll be using osf for original research projects that are more about social science theory building, testing, exploration and about contributions to research methodology. Unless I work with academic coauthors, I don’t see myself submitting to traditional peer review (though I’ll happily review a few things). But I may ask for some actual peers to read over and review these outputs.</li>
<li>Longer essays, reviews that are about more than just the piece of media itself, and syntheses of various media/individual topics/facts will likely live on YouTube proper. Some might instead/also get white paper treatments or essays on Medium. But their primary home will probably be YouTube.</li>
<li>This blog is going to be a grab bag of reviews, observations, announcements, code, artworks, poetry and short fiction (if it’s good enough to share)<sup>5</sup>, and short tutorials. The place where anything and everything can go because, why not, it’s my little home on the web—why not go maximalist with it? My home isn’t meant to be turned into grist for the algorithm; it’s meant to be a place that’s <strong>lived in</strong>.</li>
<li>I’ll be primary using R and Python but don’t be surprised if some other languages crop up in pursuit of the year’s goals (namely Rust and JavaScript). Which means I may be using VScode more.</li>
</ul>
<p>That’s all for now! It’s been a ride. Happy 2024! Also, Sundays are the start of my week so this blog <em>totally</em> counts towards my 2024 goals. Only 19 to goal!</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>On the one hand, this is obviously a joke. On the other, if you knew my family and its priorities…↩︎</p></li>
<li id="fn2"><p>I’m not going to only read 10, I’ve got the last 4 issues of <em>Assassination Classroom</em> in my backpack for a trip tomorrow and I’m halfway through the latest <em>Murderbot</em> on my Kindle. I’ll be halfway to 10 by the end of this week.↩︎</p></li>
<li id="fn3"><p>To clarify quickly: This is not a speech issue to me. I would be fine with Substack merely permitting that and other disdainful content to be published on the platform—so long as it does not serve to incite violence or engage in harassment, nor do they knowingly index it/promote it. What gets me is their decision to <em>make money</em> off of the White supremacist sites. By analogy, I don’t like that Walmart makes money from White supremacist customers, but their reusable bags don’t have the 14 words written on them or anything. Their money comes from servicing people with odious views but not from disseminating said views. But I’d be really angry with a newspaper deciding to hire on a White supremacist to their op-ed team because they would be using their platform to espouse hate while also making money, even if the rest of the staff held perfectly conventional views. By positioning themselves as a content provider and not merely a hosting platform, Substack is effectively giving their imprimatur to their profit-sharing partners. And I don’t like to do business with people who think it’s good business to make money off the promulgation of Neo-Naziism and White supremacy↩︎</p></li>
<li id="fn4"><p>I’ve also decided to delete any comments that are abusive, vitriolic, and hateful and ban repeat offenders. I’ll happily accept disagreement and good faith critique but (pseudo)anonymity doesn’t provide license for being an asshole. Act like a troll, get placed under the bridge. I’m also not going to really engage with comments for videos older than a couple of days or so unless one happens to catch my eye from a bird’s eye view of channel activity.↩︎</p></li>
<li id="fn5"><p>Otherwise, to the notes app they go. Forever.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{licari2023,
  author = {Peter Licari},
  title = {Some Reflections, Hopes, and Plans for 2024},
  date = {2023-12-30},
  url = {www.peterlicari.com/posts/plans-for-2024},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-licari2023" class="csl-entry quarto-appendix-citeas">
Peter Licari. 2023. <span>“Some Reflections, Hopes, and Plans for
2024.”</span> December 30, 2023. <a href="https://www.peterlicari.com/posts/plans-for-2024">www.peterlicari.com/posts/plans-for-2024</a>.
</div></div></section></div> ]]></description>
  <category>reflection</category>
  <category>life</category>
  <guid>www.peterlicari.com/posts/plans-for-2024/index.html</guid>
  <pubDate>Sat, 30 Dec 2023 05:00:00 GMT</pubDate>
  <media:content url="www.peterlicari.com/posts/plans-for-2024/images/persistence_of_future_plans.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>The Traditional Margin of Error When You Have Oversamples in Your Survey is Wrong</title>
  <dc:creator>Peter Licari</dc:creator>
  <link>www.peterlicari.com/posts/moe-subgroup-wrong/index.html</link>
  <description><![CDATA[ 



<div class="cell">

</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="www.peterlicari.com/posts/moe-subgroup-wrong/images/pokemon.jpg" class="img-fluid figure-img"></p>
</figure>
</div>
<section id="oversampling-and-margins-of-error" class="level1">
<h1>Oversampling and (Margins of) Error</h1>
<p>Not too long ago, pollsters and social scientists on X (the decaying husk of Twitter) found themselves discussing <a href="https://www.cnn.com/2023/09/07/politics/cnn-poll-joe-biden-headwinds">a recent CNN poll</a> detailing President Biden’s job performance and people’s attitudes towards participating in the 2024 election if it involved a 2020 Trump v. Biden rematch. Not because there was anything wrong with the poll itself, but because a prominent anti-Trump account questioned whether or not the insights were valid because the poll included an oversample of Republicans and Republican-leaning independents.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="www.peterlicari.com/posts/moe-subgroup-wrong/images/img1.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>As noted by the community post appended to the original missive, oversampling is a pretty common survey stats technique that allows researchers to drill into subpopulations that are otherwise too small in normal survey samples for reliable description. Oversampling involves deliberately sampling individuals from certain subpopulations and then weighting their contribution to the overall results in the topline values reflect their true proportion of the population. If done right, it allows for more accurate estimates at the topline and subgroup levels.</p>
<p>The kicker, of course, is “if done right.” <a href="https://peterlicari.substack.com/">I read a lot of polls.</a> Oversamples are a pretty common technique. But one thing that I notice that happens pretty frequently is that those who employ oversamples are not properly adjusting the margins of error to reflect the fact that there <em>is</em> an oversample. (Though not with the CNN poll in question, all signs point to them doing everything right). When you have an oversample, your margin of error cannot be based upon the total size of your sample alone. Doing that will make your margins of error too small for them to have the statistical properties that they’re purported to have.</p>
<p>So this post serves two purposes. The first is to show that oversampling is a completely valid thing to do so long as you weight your sample properly. But, critically, <em>also</em> if you adjust your Margins of Error properly too.</p>
<p>Before getting into why the “standard” Margin of Error (MoE) is wrong in this context, let’s first discuss what the MoE is supposed to mean, anyhow.</p>
</section>
<section id="what-even-is-the-margin-of-error-anyways" class="level1">
<h1>What even is the Margin of Error anyways?</h1>
<p>There’s only one way to guarantee that you have everyone’s preferences “correctly measured:” Gather every person in your population of interest and then ask them your question<sup>1</sup>. But that’s practically impossible once your population gets large enough. Instead, you can <em>randomly</em> select a subset of individual members from the overall population and, provided you sample a decent number of them, you can get an estimate that is decently close to the Truth. But, alas, because it is just a sample, we still expect there to be some deviation away from the true values expressed in the population.</p>
<p>The margin of error reflects our expectations for how far off from the mark we might be given the number of people we’ve sampled and the proportions we’ve observed. It constructs an interval such that, if you were to sample the same number of people from the same population infinitely many times, some large percentage of these intervals (usually 95%<sup>2</sup>) will contain, somewhere within them, the true population value. The margin of error reflects half the span of the confidence interval. (Hence why you’ll see them presented with a plus/minus sign). So an MoE of 3 percentage points on an estimate of 50% creates a confidence interval spanning 47%–53%. 95% of similarly constructed intervals contain, somwhere within it, the true population value. In practice, the size of this range reflects our uncertainty about the specific population proportions that we’ve observed in the sample.</p>
<p>To explain the above another way: Let’s say that you have a basketball that you want to get into a hoop. The ball is your population parameter. The catch: the ball is somewhere in a dark gym. You don’t know where. But you have to get it into a hoop to score points, lack of knowledge be damned. So you decide to construct a hoop large enough such that, 95% of the time that you chuck it, the ball will make it in. The hoop is your confidence interval.</p>
<p>The “classic” margin of error formula for proportions relies on two figures: The sample proportion in question and the number of observations. From a purely statistical standpoint, the MoE shrinks as you get a larger sample (though with diminishing returns). Additionally, proportions further away from 50% have smaller MoEs than those closer to 50%. However, in practice, most polling outfits and news articles about surveys report the MoE assuming a proportion of 50% because that’s the most “conservative” estimate.<sup>3</sup> The way it’s often reported, it’ll vary purely as a function of sample size.</p>
<p>Here’s the thing, though: When a survey includes an oversample, the MoE that’s (too) frequently reported out is based upon <em>the full sample of individuals.</em> So if there’s a sample of 1,000 people and they oversampled an additional 500 people, they’ll report out an MoE of about 2.5% based upon the total 1500 people sampled. But that isn’t correct. Doing so makes the MoE they report out smaller than it actually is. They are not properly conveying their uncertainty about the point estimate that they’re reporting out on.</p>
<p>I think that this sort of mistake is inadvertent. Doing surveys is hard. None of us are perfect, we can only hope to get better. It’s one thing to be told this by someone on the internet, but I hope to demonstrate it in a way that sticks. So let’s go through a simulation on something objectively way more interesting than the 2024 Presidential election: Pokemon characters!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="www.peterlicari.com/posts/moe-subgroup-wrong/images/pokemon.jpg" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="illustration-through-simulation" class="level1">
<h1>Illustration through simulation</h1>
<section id="scenario" class="level2">
<h2 class="anchored" data-anchor-id="scenario">Scenario</h2>
<p>Let’s say that we are surveying some population of people with two sub-groups and we’re asking them about their favorite classic Pokemon starter plus Pikachu—because when you’re big enough to get your own balloon in the Thanksgiving Day parade, you get special privileges. So that brings us to four total: Charmander, Bulbasaur, Squirtle, and Pikachu. For the sake of this example, let’s say subgroup one are the folks who have played Pokemon and reflect 15% of the population. Among players, let’s imagine 40% choose Bulbasaur, 30% choose Charmander, 20% choose Squirtle, and 10% choose Pikachu<sup>4</sup>. Subgroup 2 reflects non-players and constitutes 85% of the population. 40% of these people choose Pikachu, 20% choose Charmander, 25% choose Squirtle, and 15% choose Bulbasaur. Among the full population then, 18.75% choose Bulbasaur, 24.25% choose Squirtle, 35.5% choose Pikachu, and 21.5% choose Charmander.</p>
<p><img src="www.peterlicari.com/posts/moe-subgroup-wrong/images/poke_preferences.png" class="img-fluid"></p>
</section>
<section id="creating-the-data" class="level2">
<h2 class="anchored" data-anchor-id="creating-the-data">Creating the Data</h2>
<p>Let’s go ahead and simulate this population. I’ll be doing this in R (R version 4.2.2 (2022-10-31 ucrt)). I’m making it a total population of 10,000,000. The first part of the code chunk creates a dataframe that we’ll be using to sample from. The <code>with_seed</code> function comes from the <code>{withr}</code> package; I want to keep this reproducible on my machine since I’ll be using random sampling. The second part uses the <code>{summarytools}</code> package to make cross-tabs to illustrate that the data set construction worked as intended.</p>
<div class="cell">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">suppressPackageStartupMessages</span>(<span class="fu" style="color: #4758AB;">library</span>(tidyverse))</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">suppressPackageStartupMessages</span>(<span class="fu" style="color: #4758AB;">library</span>(summarytools))</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">suppressPackageStartupMessages</span>(<span class="fu" style="color: #4758AB;">library</span>(withr))</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">suppressPackageStartupMessages</span>(<span class="fu" style="color: #4758AB;">library</span>(questionr))</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">with_seed</span>(<span class="dv" style="color: #AD0000;">13</span>, {</span>
<span id="cb1-7"></span>
<span id="cb1-8">players <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb1-9">  <span class="fu" style="color: #4758AB;">tibble</span>(</span>
<span id="cb1-10">    <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"Player"</span>,</span>
<span id="cb1-11">    <span class="at" style="color: #657422;">preference =</span> <span class="fu" style="color: #4758AB;">sample</span>(</span>
<span id="cb1-12">    <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"Bulbasaur"</span>, <span class="st" style="color: #20794D;">"Charmander"</span>, <span class="st" style="color: #20794D;">"Squirtle"</span>, <span class="st" style="color: #20794D;">"Pikachu"</span>),</span>
<span id="cb1-13">    <span class="at" style="color: #657422;">prob =</span> <span class="fu" style="color: #4758AB;">c</span>(.<span class="dv" style="color: #AD0000;">40</span>, .<span class="dv" style="color: #AD0000;">30</span>, .<span class="dv" style="color: #AD0000;">20</span>, .<span class="dv" style="color: #AD0000;">10</span>),</span>
<span id="cb1-14">    <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">1500000</span>,</span>
<span id="cb1-15">    <span class="at" style="color: #657422;">replace =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb1-16">  ))</span>
<span id="cb1-17"></span>
<span id="cb1-18"></span>
<span id="cb1-19">non_players <span class="ot" style="color: #003B4F;">&lt;-</span></span>
<span id="cb1-20">  <span class="fu" style="color: #4758AB;">tibble</span>(</span>
<span id="cb1-21">    <span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"Non Player"</span>,</span>
<span id="cb1-22">    <span class="at" style="color: #657422;">preference =</span> <span class="fu" style="color: #4758AB;">sample</span>(</span>
<span id="cb1-23">    <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"Bulbasaur"</span>, <span class="st" style="color: #20794D;">"Charmander"</span>, <span class="st" style="color: #20794D;">"Squirtle"</span>, <span class="st" style="color: #20794D;">"Pikachu"</span>),</span>
<span id="cb1-24">    <span class="at" style="color: #657422;">prob =</span> <span class="fu" style="color: #4758AB;">c</span>(.<span class="dv" style="color: #AD0000;">15</span>, .<span class="dv" style="color: #AD0000;">20</span>, .<span class="dv" style="color: #AD0000;">25</span>, .<span class="dv" style="color: #AD0000;">40</span>),</span>
<span id="cb1-25">    <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">8500000</span>,</span>
<span id="cb1-26">    <span class="at" style="color: #657422;">replace =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb1-27">  ))</span>
<span id="cb1-28"></span>
<span id="cb1-29">full <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rbind</span>(players, non_players)</span>
<span id="cb1-30"></span>
<span id="cb1-31">full <span class="ot" style="color: #003B4F;">&lt;-</span> full <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-32">  dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">pop_id =</span> <span class="fu" style="color: #4758AB;">row_number</span>())</span>
<span id="cb1-33"></span>
<span id="cb1-34">})</span>
<span id="cb1-35"></span>
<span id="cb1-36"></span>
<span id="cb1-37"><span class="fu" style="color: #4758AB;">ctable</span>(full<span class="sc" style="color: #5E5E5E;">$</span>preference, full<span class="sc" style="color: #5E5E5E;">$</span>type, <span class="at" style="color: #657422;">prop =</span> <span class="st" style="color: #20794D;">'c'</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Cross-Tabulation, Column Proportions  
preference * type  
Data Frame: full  

------------ ------ ------------------ ------------------ -------------------
               type         Non Player             Player               Total
  preference                                                                 
   Bulbasaur          1276579 ( 15.0%)    599477 ( 40.0%)    1876056 ( 18.8%)
  Charmander          1700113 ( 20.0%)    450589 ( 30.0%)    2150702 ( 21.5%)
     Pikachu          3399748 ( 40.0%)    149398 ( 10.0%)    3549146 ( 35.5%)
    Squirtle          2123560 ( 25.0%)    300536 ( 20.0%)    2424096 ( 24.2%)
       Total          8500000 (100.0%)   1500000 (100.0%)   10000000 (100.0%)
------------ ------ ------------------ ------------------ -------------------</code></pre>
</div>
</div>
<p>Looks like this worked great! The subgroup proportions and the overall group proportions are where we expect them to be.</p>
</section>
<section id="sampling" class="level2">
<h2 class="anchored" data-anchor-id="sampling">Sampling</h2>
<p>Now let’s say that we’re going to sample 1,000 respondents from this population. But! We’d like to also do analyses of Players as a subgroup. We’d only expect to get about 150 people, which isn’t nothing but it’s not a whole lot either. So we’ll oversample an additional 500 game players for a total of 1,500 people. We’ll then weight respondents in our sample so that the overall values are unaffected.</p>
<div class="cell">
<details>
<summary>Show the code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="do" style="color: #5E5E5E;
font-style: italic;">## Main 1,000 sample</span></span>
<span id="cb3-2">main_sample <span class="ot" style="color: #003B4F;">&lt;-</span> full <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;">sample_n</span>(<span class="dv" style="color: #AD0000;">1000</span>)</span>
<span id="cb3-4"></span>
<span id="cb3-5">main_sample_ids <span class="ot" style="color: #003B4F;">&lt;-</span> main_sample<span class="sc" style="color: #5E5E5E;">$</span>pop_id <span class="co" style="color: #5E5E5E;"># Ids of those sampled</span></span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="do" style="color: #5E5E5E;
font-style: italic;">## Oversample of 500</span></span>
<span id="cb3-8">oversample <span class="ot" style="color: #003B4F;">&lt;-</span> full <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;">filter</span>(type <span class="sc" style="color: #5E5E5E;">%in%</span> <span class="st" style="color: #20794D;">"Player"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;">filter</span>(<span class="sc" style="color: #5E5E5E;">!</span>pop_id <span class="sc" style="color: #5E5E5E;">%in%</span> main_sample_ids) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="co" style="color: #5E5E5E;">#no double sampling!</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;">sample_n</span>(<span class="dv" style="color: #AD0000;">500</span>)</span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="do" style="color: #5E5E5E;
font-style: italic;">## Full sample</span></span>
<span id="cb3-14">full_sample <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rbind</span>(main_sample, oversample)</span>
<span id="cb3-15"></span>
<span id="cb3-16"><span class="do" style="color: #5E5E5E;
font-style: italic;">## Calculating weights</span></span>
<span id="cb3-17">weights_df <span class="ot" style="color: #003B4F;">&lt;-</span> full_sample <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-18">  <span class="fu" style="color: #4758AB;">count</span>(type) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-19">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">weight_prop =</span> <span class="fu" style="color: #4758AB;">ifelse</span>(type <span class="sc" style="color: #5E5E5E;">%in%</span> <span class="st" style="color: #20794D;">"Player"</span>,.<span class="dv" style="color: #AD0000;">15</span>,.<span class="dv" style="color: #AD0000;">85</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-20">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">weight =</span> (weight_prop <span class="sc" style="color: #5E5E5E;">*</span> <span class="dv" style="color: #AD0000;">1500</span>)<span class="sc" style="color: #5E5E5E;">/</span>n) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb3-21">  <span class="fu" style="color: #4758AB;">select</span>(type, weight)</span>
<span id="cb3-22"></span>
<span id="cb3-23">full_sample <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">left_join</span>(full_sample, weights_df, <span class="at" style="color: #657422;">by =</span> <span class="st" style="color: #20794D;">"type"</span>)</span></code></pre></div>
</details>
</div>
<p>Looking at the table below, which compares the weighted versus non-weighted and the actual population proportions, we can see that the weighting does its job; it brought the actual topline values to be far closer to the actual population values than the unweighted version did. Incidentally this shows why you should always downweight your oversample—otherwise, your overall values will be off by a lot more!</p>
<div class="cell">
<div class="cell-output-display">

<div class="tabwid"><style>.cl-181daca0{}.cl-18123096{font-family:'Arial';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-181230a0{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-18173000{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-1817300a{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-18174c84{width:0.75in;background-color:rgba(103, 125, 183, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-18174c8e{width:0.75in;background-color:rgba(103, 125, 183, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-18174c8f{width:0.75in;background-color:rgba(240, 241, 250, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-18174c90{width:0.75in;background-color:rgba(240, 241, 250, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-18174c98{width:0.75in;background-color:rgba(198, 210, 239, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-18174c99{width:0.75in;background-color:rgba(198, 210, 239, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing="true" class="cl-181daca0"><thead><tr style="overflow-wrap:break-word;"><th class="cl-18174c84"><p class="cl-18173000"><span class="cl-18123096">preference</span></p></th><th class="cl-18174c8e"><p class="cl-1817300a"><span class="cl-18123096">Pop Values</span></p></th><th class="cl-18174c8e"><p class="cl-1817300a"><span class="cl-18123096">Unweighted</span></p></th><th class="cl-18174c8e"><p class="cl-1817300a"><span class="cl-18123096">Weighted</span></p></th></tr></thead><tbody><tr style="overflow-wrap:break-word;"><td class="cl-18174c8f"><p class="cl-18173000"><span class="cl-181230a0">Bulbasaur</span></p></td><td class="cl-18174c90"><p class="cl-1817300a"><span class="cl-181230a0">0.1876056</span></p></td><td class="cl-18174c90"><p class="cl-1817300a"><span class="cl-181230a0">0.2440000</span></p></td><td class="cl-18174c90"><p class="cl-1817300a"><span class="cl-181230a0">0.1755069</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-18174c98"><p class="cl-18173000"><span class="cl-181230a0">Charmander</span></p></td><td class="cl-18174c99"><p class="cl-1817300a"><span class="cl-181230a0">0.2150702</span></p></td><td class="cl-18174c99"><p class="cl-1817300a"><span class="cl-181230a0">0.2666667</span></p></td><td class="cl-18174c99"><p class="cl-1817300a"><span class="cl-181230a0">0.2249455</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-18174c8f"><p class="cl-18173000"><span class="cl-181230a0">Pikachu</span></p></td><td class="cl-18174c90"><p class="cl-1817300a"><span class="cl-181230a0">0.3549146</span></p></td><td class="cl-18174c90"><p class="cl-1817300a"><span class="cl-181230a0">0.2546667</span></p></td><td class="cl-18174c90"><p class="cl-1817300a"><span class="cl-181230a0">0.3345803</span></p></td></tr><tr style="overflow-wrap:break-word;"><td class="cl-18174c98"><p class="cl-18173000"><span class="cl-181230a0">Squirtle</span></p></td><td class="cl-18174c99"><p class="cl-1817300a"><span class="cl-181230a0">0.2424096</span></p></td><td class="cl-18174c99"><p class="cl-1817300a"><span class="cl-181230a0">0.2346667</span></p></td><td class="cl-18174c99"><p class="cl-1817300a"><span class="cl-181230a0">0.2649673</span></p></td></tr></tbody></table></div>
</div>
</div>
<p>But the question isn’t whether downweighting an oversample gets us back in the right ballpark. It’s whether or not the purported MoE from the full 1,500 people is correct. If it is, we’d expect that, should this sample be conducted an arbitrarily large umber of times, 95% of those confidence intervals will contain the true population value.</p>
</section>
<section id="simulating-1000-pokemon-preference-surveys" class="level2">
<h2 class="anchored" data-anchor-id="simulating-1000-pokemon-preference-surveys">Simulating 1,000 Pokemon Preference Surveys</h2>
<p>Computers may be amazing, but they can’t do something infinitely many times. But, just like with random sampling, doing something a bunch of times instead will get us in the right ball park.</p>
<p>So let’s conduct 1,000 samples of 1,500 from our full population data—1,000 people randomly selected from the full data (players and non-players alike) and then 500 randomly selected just amongst the 15% of people that are Pokemon players. We’ll then weight these respondents correctly such that the players won’t have an outsized influence on the topline results. I’ll report out on 3 different MoEs.</p>
<ol type="1">
<li>The first assuming the oversample is included and not downweighted, calculated with the standard MoE.</li>
<li>The second weighting the oversample properly, calculated with the standard MoE.</li>
<li>The third weighting the oversample properly and calculating it with an MoE that takes the oversampling into account.</li>
</ol>
<p>Given that these are 95% confidence intervals, we should expect approximately 95% of intervals to contain the true population value.</p>
<p>The chart below visualizes the results of the simulation. Each facet reflects a type of confidence interval (rows) and a Pokemon (column). The vertical bars reflect the MoEs for each of the 1,000 simulated samples. Their order up and down the Y axis is arbitrary, they happen to go bottom up from the first simulated run to the last. Moving horizontal on the X axis are smaller–larger proportions of the synthetic population. The black vertical lines reflect how popular those Pokemon truly are in our synthetic population. Horizontal lines that cross this gray reference line have successfully captured the population parameter. Those that miss have not accurately captured that Pokemon’s overall popularity in the sample. Since all of these are purportedly 95% confidence intervals, we would hope that they do so 95% of the time.</p>
<p>In short, the more solid lines we have, the worse we’re doing. And if we have more than 5% of sample that shows a solid line, then our MoE isn’t being constructed correctly.</p>
<div class="cell">

</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="www.peterlicari.com/posts/moe-subgroup-wrong/images/simulated_moe.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Looking at the first section with the Standard MoE things appear to be okay. Indeed, if we were to just eyeball it one might think that we’re actually getting 95% coverage. But we’re not. It’s actually only 91.4%. The degree to which this “standard” MoE is wrong will depend on how much we have to weight the sample versus an ideal case of perfect random sampling. This is known as the weighting efficiency. It’s possible for this to be closer to 95%. But it’s also possible for it to be further away depending on how much your weights have to work to bring values in-line with your population targets.</p>
<p>In the second section, we’ve actually hit what we were aiming for. Here, we took the design of the sampling into account and were able to achieve 95% coverage. Right on the money<sup>5</sup>. In practice, design-effect adjusted MoEs are slightly elongated to account for the aforementioned weighting efficiency. I’ll leave the technical details about that for another post. But, for now, know that it is not only possible but <em>necessary</em> to adjust a survey’s MoE when it has an oversample in order to accurately convey one’s uncertainty about the point estimate.</p>
<p>Looking at the third row with the unweighted values, the coverage is absolutely abysmal. Only 25.2% of the confidence intervals contain the true population mean. And the only reason that it’s even <em>this</em> accurate is because Squirtle is about as popular with both players and non-players. Again, let it be said: <strong>ALLWAYS WEIGHT-IN YOUR OVERSAMPLES IF YOU’RE DOING TOPLINE VALUES</strong>.</p>
</section>
</section>
<section id="in-sum" class="level1">
<h1>In Sum</h1>
<p>To be sure, misreporting the MoE for oversamples is not the most prominent survey-science sin. If anything, we shouldn’t be taking the MoE as reported as gospel anyhow. Those only reflect pure sampling error for random sampling—conditions that don’t actually exist in mainstream public opinion and survey research. There are other systematic biases that can creep into our instruments and analyses. Indeed, empirical research of surveys suggest that MoEs are actually only half as big as they’d need to be to contain the true population parameters 95% of the time<sup>6</sup>.</p>
<p>That’s not to say that polls are worthless, of course. Just that we as consumers need to know that, while still pretty good at tracking attitudes, they’re not perfect. And that we, as producers, need to do our due diligence in reporting our confidence in these estimates more accurately. And one easy way to do this is not to report “standard” margins of error when we’re dealing with headline data with oversamples.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>It’s important to note that this would be a <em>necessary</em> step but not a sufficient step. Asking the right question—and in the right way—is a lot harder than most people give credit for. Drawing the correct conclusions from that is even harder. Yay epistemology and statistics!↩︎</p></li>
<li id="fn2"><p>Which is where we get the term “95% confidence intervals” from.↩︎</p></li>
<li id="fn3"><p>We’ll soon see that just because something is more “conservative,” it doesn’t mean it’s not wrong.↩︎</p></li>
<li id="fn4"><p>Look, unlike in the OG anime where Pikachu cheats by activating the sprinkler system, putting an electric type against an Onix is simply an easy way to get your ass handed to you.↩︎</p></li>
<li id="fn5"><p>Technically it’s 95.025 percent, but good enough for government work, right?↩︎</p></li>
<li id="fn6"><p>Though the degree of deviation is smaller when the design effects are taken into account. That said, empirically, it doesn’t shrink the deviation to zero. Because, again, there are other issues biasing poll results other than just sampling.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{licari2023,
  author = {Peter Licari},
  title = {The {Traditional} {Margin} of {Error} {When} {You} {Have}
    {Oversamples} in {Your} {Survey} Is {Wrong}},
  date = {2023-09-13},
  url = {www.peterlicari.com/posts/moe-subgroup-wrong},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-licari2023" class="csl-entry quarto-appendix-citeas">
Peter Licari. 2023. <span>“The Traditional Margin of Error When You Have
Oversamples in Your Survey Is Wrong.”</span> September 13, 2023. <a href="https://www.peterlicari.com/posts/moe-subgroup-wrong">www.peterlicari.com/posts/moe-subgroup-wrong</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>statistics</category>
  <category>simulation</category>
  <category>surveys</category>
  <guid>www.peterlicari.com/posts/moe-subgroup-wrong/index.html</guid>
  <pubDate>Wed, 13 Sep 2023 04:00:00 GMT</pubDate>
  <media:content url="www.peterlicari.com/posts/moe-subgroup-wrong/images/pokemon.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>How to add a Variable Font to a Quarto PDF on Windows</title>
  <dc:creator>Peter Licari</dc:creator>
  <link>www.peterlicari.com/posts/quarto-custom-font-windows/index.html</link>
  <description><![CDATA[ 



<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="www.peterlicari.com/posts/quarto-custom-font-windows/images/title_card.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption"><em>The Writing on the Wall</em><br>
Created by Author &amp; Easy Diffusion</figcaption><p></p>
</figure>
</div>
<p>This is one of those posts motivated by never <strong><em>ever</em></strong> wanting to subject anyone to the insanity that I experienced while struggling through what only <em>seems</em> to be a simple idea.</p>
<p>It was a simple dream, really. I was writing up a report in Quarto. I have an OpenType Google font that I’m fond of. I wanted to use said font in said document. Quarto supports custom fonts. It should be simple to put in my new font—right? <strong>RIGHT?!</strong></p>
<p>(Click here to go directly to the solutions. Keep reading on if you want a bit of commentary and description of the problem. If it sounds like I went crazy, it’s because I did.)</p>
<section id="the-problem" class="level2">
<h2 class="anchored" data-anchor-id="the-problem">The Problem</h2>
<p>I’ve installed a Google font called <a href="https://fonts.google.com/specimen/Vollkorn?query=Vollkorn">Vollkorn</a>—and I wanted to use it in a Quarto report that I was writing up. <a href="https://quarto.org/docs/reference/formats/pdf.html">The Quarto documentation</a> suggests that using custom fonts would be a pretty straightforward task: Just set <code>mainfont</code> in the YAML header to the name of your font family of choice and <a href="https://ctan.org/pkg/fontspec">the fontspec</a> Tex package would handle the rest on the back-end. And if I wanted to switch from the default font to something else already packaged with Windows (like Calibri or, because I’m just a troll at heart, Comic Sans), it’s very straight-forward!</p>
<div class="columns">
<div class="column" style="width:45%;">
<details>
<summary>
<strong>Code</strong>
</summary>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb1-1"><span class="in" style="color: #5E5E5E;">```{qmd}</span></span>
<span id="cb1-2"><span class="in" style="color: #5E5E5E;">---</span></span>
<span id="cb1-3"><span class="in" style="color: #5E5E5E;">title: "Example"</span></span>
<span id="cb1-4"><span class="in" style="color: #5E5E5E;">author: "Peter Licari"</span></span>
<span id="cb1-5"><span class="in" style="color: #5E5E5E;">editor: visual</span></span>
<span id="cb1-6"><span class="in" style="color: #5E5E5E;">---</span></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="in" style="color: #5E5E5E;">## This is an example</span></span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="in" style="color: #5E5E5E;">Sphinx of black quartz, judge my vow!</span></span>
<span id="cb1-11"><span class="in" style="color: #5E5E5E;">```</span></span></code></pre></div>
</details>
<p><strong>Output</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="www.peterlicari.com/posts/quarto-custom-font-windows/images/figure1.png" class="img-fluid figure-img" width="400"></p>
<p></p><figcaption class="figure-caption">Figure 1: With standard font</figcaption><p></p>
</figure>
</div>
</div><div class="column" style="width:10%;">

</div><div class="column" style="width:45%;">
<details>
<summary>
<strong>Code</strong>
</summary>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb2-1"><span class="in" style="color: #5E5E5E;">```{qmd}</span></span>
<span id="cb2-2"><span class="in" style="color: #5E5E5E;">---</span></span>
<span id="cb2-3"><span class="in" style="color: #5E5E5E;">title: "Example 2"</span></span>
<span id="cb2-4"><span class="in" style="color: #5E5E5E;">author: "Peter Licari"</span></span>
<span id="cb2-5"><span class="in" style="color: #5E5E5E;">format: </span></span>
<span id="cb2-6"><span class="in" style="color: #5E5E5E;">  pdf:</span></span>
<span id="cb2-7"><span class="in" style="color: #5E5E5E;">    mainfont: 'Comic Sans MS'</span></span>
<span id="cb2-8"><span class="in" style="color: #5E5E5E;">editor: visual</span></span>
<span id="cb2-9"><span class="in" style="color: #5E5E5E;">---</span></span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="in" style="color: #5E5E5E;">## This is an example</span></span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="in" style="color: #5E5E5E;">Sphinx of black quartz, judge my vow!</span></span>
<span id="cb2-14"><span class="in" style="color: #5E5E5E;">```</span></span></code></pre></div>
</details>
<p><strong>Output</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="www.peterlicari.com/posts/quarto-custom-font-windows/images/figure2.png" class="img-fluid figure-img" width="400"></p>
<p></p><figcaption class="figure-caption">Figure 2: With accursed font</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>But let’s take a look at what comes up when I try to use Vollkorn:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb3-1"><span class="in" style="color: #5E5E5E;">```{r}</span></span>
<span id="cb3-2">running xelatex <span class="sc" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb3-3">  This is XeTeX, Version <span class="fl" style="color: #AD0000;">3.141592653-2.6-0.999994</span> (TeX Live <span class="dv" style="color: #AD0000;">2022</span>) (preloaded <span class="at" style="color: #657422;">format=</span>xelatex)</span>
<span id="cb3-4">   restricted \write18 enabled.</span>
<span id="cb3-5">  entering extended mode</span>
<span id="cb3-6">  </span>
<span id="cb3-7">updating tlmgr</span>
<span id="cb3-8"></span>
<span id="cb3-9">updating existing packages</span>
<span id="cb3-10">finding package <span class="cf" style="color: #003B4F;">for</span> <span class="fu" style="color: #4758AB;">Vollkorn</span>(<span class="sc" style="color: #5E5E5E;">-</span>(Bold<span class="sc" style="color: #5E5E5E;">|</span>Italic<span class="sc" style="color: #5E5E5E;">|</span>Regular).<span class="sc" style="color: #5E5E5E;">*</span>)?[.](tfm<span class="sc" style="color: #5E5E5E;">|</span>afm<span class="sc" style="color: #5E5E5E;">|</span>mf<span class="sc" style="color: #5E5E5E;">|</span>otf<span class="sc" style="color: #5E5E5E;">|</span>ttf)</span>
<span id="cb3-11"></span>
<span id="cb3-12">compilation failed<span class="sc" style="color: #5E5E5E;">-</span> no matching packages</span>
<span id="cb3-13">Package fontspec Error<span class="sc" style="color: #5E5E5E;">:</span> The font <span class="st" style="color: #20794D;">"Vollkorn"</span> cannot be found.</span>
<span id="cb3-14"><span class="in" style="color: #5E5E5E;">```</span></span></code></pre></div>
<p>Which is <em>incredibly frustrating</em> because I can go to my Windows fonts<sup>1</sup> I can clearly see the damn font there. All installed. <strong><em>Mockingly.</em></strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="www.peterlicari.com/posts/quarto-custom-font-windows/images/figure3.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Figure 3: Vollkorn and LaTeX mocking me by claiming that the former is not installed.</figcaption><p></p>
</figure>
</div>
<p>If I were to click-on and inspect the properties of the Vollkorn font and compare them to Comic Sans font, though, you’ll notice a couple of interesting things. First, as highlighted in yellow, the files are located in entirely separate roots! There are actually two ways we can solve this—but the bigger issue is with what’s highlighted in blue: Vollkorn is a Variable Font.</p>
<div class="columns">
<div class="column" style="width:45%;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="www.peterlicari.com/posts/quarto-custom-font-windows/images/figure5.png" class="img-fluid figure-img" width="400"></p>
<p></p><figcaption class="figure-caption">Figure 4: File path for cursed font (Comic Sans)</figcaption><p></p>
</figure>
</div>
</div><div class="column" style="width:10%;">

</div><div class="column" style="width:45%;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="www.peterlicari.com/posts/quarto-custom-font-windows/images/figure4.png" class="img-fluid figure-img" width="400"></p>
<p></p><figcaption class="figure-caption">Figure 5: File path for Vollkorn</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p><a href="https://fonts.google.com/knowledge/glossary/variable_fonts">Variable fonts</a> are a specific kind of font that offers more flexibility for designers than simply having separate, static versions for, say, bold, Italic, bold italic, etc. It turns out, however, that the default Quarto pdf render engine, <code>xelatex</code> does not play well with variable fonts. And by well I mean at all—it straight-up doesn’t work.</p>
<p>And what <em>about</em> the difference in file roots; what the heck is going on there? As I learned the hard way, this is actually standard behavior since at least Windows 10. When you install a font, you have to specify that you want it to be for <em>all</em> users. Only then will it go to the Windows/Fonts directory—which is where the <code>fontspec</code> LaTeX package looks by default. Otherwise, it’ll get installed within the AppData/Local directory. Hence why the error says the font couldn’t be found. <strong>I</strong> could find it, but it wasn’t where <code>fontspec</code> was looking! However, with Windows 11, the option to install for all users doesn’t initially appear when you right-click on the font to install it. Clicking “Install” will only install it locally.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="www.peterlicari.com/posts/quarto-custom-font-windows/images/figure6.png" class="img-fluid figure-img" width="200"></p>
<p></p><figcaption class="figure-caption">Figure 6: Standard install available at right-click won’t do what you think it should.</figcaption><p></p>
</figure>
</div>
</section>
<section id="sec-solutions" class="level2">
<h2 class="anchored" data-anchor-id="sec-solutions">The Solution(s):</h2>
<p>There are actually a couple solutions for this: One that’s relatively simple and another that’s more involved. I’ll go simple, then go more involved. (Even though that is the exact <em>opposite</em> way that I discovered these solutions for my own purposes…)</p>
<p>Before doing dealing with either the simple or involved routes though, let’s go ahead and knock out the file path; we’ll need to know where the file lives in order for either solution to work.</p>
<section id="address-the-files-well-address." class="level3">
<h3 class="anchored" data-anchor-id="address-the-files-well-address.">1. Address the file’s, well, address.</h3>
<p>You’ve got two options for this. The first is to uninstall the fonts<sup>2</sup> and then re-install them so that they are installed for all users. You can accomplish this by selecting “Show more options” after right-clicking on the font file(s) you want to install. From there “Install for All Users” should be visible (it’ll often be accompanied by a little shield).</p>
<p>If you don’t want to reinstall the file, you can use the <code>mainfontoptions</code> parameter and redirect where <code>fontspec</code> is looking:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb4-1"><span class="in" style="color: #5E5E5E;">```{qmd}</span></span>
<span id="cb4-2"><span class="in" style="color: #5E5E5E;">---</span></span>
<span id="cb4-3"><span class="in" style="color: #5E5E5E;">title: "Example 3"</span></span>
<span id="cb4-4"><span class="in" style="color: #5E5E5E;">author: "Peter Licari"</span></span>
<span id="cb4-5"><span class="in" style="color: #5E5E5E;">format: </span></span>
<span id="cb4-6"><span class="in" style="color: #5E5E5E;">  pdf:</span></span>
<span id="cb4-7"><span class="in" style="color: #5E5E5E;">    mainfont: 'Vollkorn-Regular'</span></span>
<span id="cb4-8"><span class="in" style="color: #5E5E5E;">    mainfontoptions:</span></span>
<span id="cb4-9"><span class="in" style="color: #5E5E5E;">      - Path = C:/Users/prlic/AppData/Local/Microsoft/Windows/Fonts/</span></span>
<span id="cb4-10"><span class="in" style="color: #5E5E5E;">      - Extension = .ttf </span></span>
<span id="cb4-11"><span class="in" style="color: #5E5E5E;">editor: visual</span></span>
<span id="cb4-12"><span class="in" style="color: #5E5E5E;">---</span></span>
<span id="cb4-13"><span class="in" style="color: #5E5E5E;">```</span></span></code></pre></div>
<p>For the remaining bit of advice, I’m going to assume that you’re going with the reinstall option. However, if you didn’t, all you’d have to do is make sure those two parts of <code>mainfontoptions</code> are specified.</p>
</section>
<section id="handle-the-variable-font-type" class="level3">
<h3 class="anchored" data-anchor-id="handle-the-variable-font-type">2. Handle the Variable Font Type</h3>
<section id="the-easy-way" class="level4">
<h4 class="anchored" data-anchor-id="the-easy-way">The easy way:</h4>
<p>While Quarto’s default Tex engine on Windows doesn’t play nice with variable fonts, one of the optional rendering engines, LuaLatex works well! So all you would have to do is specify the <code>pdf-engine</code> parameter:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb5-1"><span class="in" style="color: #5E5E5E;">```{qmd}</span></span>
<span id="cb5-2"><span class="in" style="color: #5E5E5E;">---</span></span>
<span id="cb5-3"><span class="in" style="color: #5E5E5E;">title: "Example 3"</span></span>
<span id="cb5-4"><span class="in" style="color: #5E5E5E;">author: "Peter Licari"</span></span>
<span id="cb5-5"><span class="in" style="color: #5E5E5E;">format: </span></span>
<span id="cb5-6"><span class="in" style="color: #5E5E5E;">  pdf:</span></span>
<span id="cb5-7"><span class="in" style="color: #5E5E5E;">    mainfont: 'Vollkorn-Regular'</span></span>
<span id="cb5-8"><span class="in" style="color: #5E5E5E;">    pdf-engine: lualatex</span></span>
<span id="cb5-9"><span class="in" style="color: #5E5E5E;">editor: visual</span></span>
<span id="cb5-10"><span class="in" style="color: #5E5E5E;">---</span></span>
<span id="cb5-11"><span class="in" style="color: #5E5E5E;">```</span></span></code></pre></div>
<p>Why use xelatex over lulatex or vice-versa? There’s a couple interesting Reddit threads on the topic. It seems that LuaLatex is preferred but xelatex is a bit faster (possibly) and useful for backwards compatibility on older renders.</p>
</section>
<section id="the-more-involved-way" class="level4">
<h4 class="anchored" data-anchor-id="the-more-involved-way">The more involved way</h4>
<p>But let’s say that you’re committed to xelatex. Or you’re me and you didn’t realize that a way easier option existed <strong><em>the whole goddamn time</em></strong> prior to writing a blog post.<sup>3</sup></p>
<p>Fortunately, many of the variable font styles available from Google Fonts <em>also</em> come pre-packaged with the so-called “Static” files (the aforementioned separate <em>italic,</em> <strong>bold</strong>, and <strong><em>bold-italic</em></strong> files). So instead of installing the variable-font, you would install all of the individual types, which you can set manually in <code>mainfontoptions</code>.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb6-1"><span class="in" style="color: #5E5E5E;">```{qmd}</span></span>
<span id="cb6-2"><span class="in" style="color: #5E5E5E;">---</span></span>
<span id="cb6-3"><span class="in" style="color: #5E5E5E;">title: "Example 3"</span></span>
<span id="cb6-4"><span class="in" style="color: #5E5E5E;">author: "Peter Licari"</span></span>
<span id="cb6-5"><span class="in" style="color: #5E5E5E;">format: </span></span>
<span id="cb6-6"><span class="in" style="color: #5E5E5E;">  pdf:</span></span>
<span id="cb6-7"><span class="in" style="color: #5E5E5E;">    mainfont: 'Vollkorn-Regular'</span></span>
<span id="cb6-8"><span class="in" style="color: #5E5E5E;">    mainfontoptions:</span></span>
<span id="cb6-9"><span class="in" style="color: #5E5E5E;">      - BoldFont = Vollkorn-Bold</span></span>
<span id="cb6-10"><span class="in" style="color: #5E5E5E;">      - ItalicFont = Vollkorn-Italic</span></span>
<span id="cb6-11"><span class="in" style="color: #5E5E5E;">      - BoldItalicFont= Vollkorn-Bolditalic</span></span>
<span id="cb6-12"><span class="in" style="color: #5E5E5E;">      - Extension = .ttf </span></span>
<span id="cb6-13"><span class="in" style="color: #5E5E5E;">editor: visual</span></span>
<span id="cb6-14"><span class="in" style="color: #5E5E5E;">---</span></span>
<span id="cb6-15"><span class="in" style="color: #5E5E5E;">```</span></span></code></pre></div>
</section>
<section id="et-viola" class="level4">
<h4 class="anchored" data-anchor-id="et-viola">Et viola!</h4>
<p>Either way that you do it, you’ll be able to get the fonts loaded as you’d like!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="www.peterlicari.com/posts/quarto-custom-font-windows/images/figure7.png" class="img-fluid figure-img"></p>
<p></p><figcaption class="figure-caption">Figure 7: Success!</figcaption><p></p>
</figure>
</div>
<hr>
<p><em>I hope this was helpful to others and saved them the headache that I dealt with when trying to just make a simple report!</em></p>


</section>
</section>
</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>For those who want to find your fonts but don’t know how: Go to the search bar near the Windows logo on your desktop. Search “fonts”. It should pop up with a link to the fonts part of your control panel.↩︎</p></li>
<li id="fn2"><p>You can do this by going to the control panel, going to fonts, clicking into the fonts you want gone, and selecting “delete.”↩︎</p></li>
<li id="fn3"><p>On the one hand: I have always said that I write to think. On the other, man I wish I was a faster writer/thinker.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{licari2023,
  author = {Peter Licari},
  title = {How to Add a {Variable} {Font} to a {Quarto} {PDF} on
    {Windows}},
  date = {2023-08-01},
  url = {www.peterlicari.com/posts/quarto-custom-font-windows},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-licari2023" class="csl-entry quarto-appendix-citeas">
Peter Licari. 2023. <span>“How to Add a Variable Font to a Quarto PDF on
Windows.”</span> August 1, 2023. <a href="https://www.peterlicari.com/posts/quarto-custom-font-windows">www.peterlicari.com/posts/quarto-custom-font-windows</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>Quarto</category>
  <category>tutorial</category>
  <guid>www.peterlicari.com/posts/quarto-custom-font-windows/index.html</guid>
  <pubDate>Tue, 01 Aug 2023 04:00:00 GMT</pubDate>
  <media:content url="www.peterlicari.com/posts/quarto-custom-font-windows/images/title_card.png" medium="image" type="image/png" height="148" width="144"/>
</item>
<item>
  <title>What to do when R punches you in the mouth</title>
  <dc:creator>Peter Licari</dc:creator>
  <link>www.peterlicari.com/posts/r-punch-in-face-23/index.html</link>
  <description><![CDATA[ 



<p><img src="www.peterlicari.com/posts/r-punch-in-face-23/images/title_card.png" class="img-fluid"></p>
<section id="tldr" class="level1">
<h1>TL;DR</h1>
<p>Attaining mastery in R is not about avoiding hiccups, but about learning what to do when you’re inevitably confronted with them. However, this is hardly covered in most introductory materials for the language; you tend to get this knowledge from the school of hard knocks. In this post, I hope to pull back the curtain a bit in a way that’s helpful to people who may be getting started with R. I write out the four most common categories of headaches I face when programming/doing analytics in R. With each headache, I talk about the things I search for and why. I’ll wrap-up by talking about my problem-solving framework.</p>
</section>
<section id="intro" class="level1">
<h1>Intro</h1>
<p>I’ve been working in R for a bit over five years now<sup>1</sup>—and though I certainly can’t say that I’ve mastered every package, framework, or dialect, I’ve wracked up enough experience to be pretty competent as both a user and developer. But competence in R (and any other programming language for that matter) shouldn’t be thought as how effortlessly one produces working code. I’d argue it’s the opposite. It’s about what you do when your code <strong><em>doesn’t</em></strong> work.</p>
<p>A while back, I listened to Brian Christian’s book <em>The Alignment Problem</em> and there was a story when he was discussing imitation learning that stuck with me. Specifically, it was the part where former Carnegie Mellon graduate student Stéphane Ross wanted to train a model on how to play a knock-off of <em>Super</em> <em>Mario Kart</em>. Ross was quite good at the game, so he provided the model with the training data by playing it himself—the model ingesting the visual data on screen as well as how he moved his joystick. After hours of play, he set it loose.</p>
<p>If you think this plan would result in an agent that was, itself, good at <em>Mario Kart</em> because it was learning from someone who was good at <em>Mario Kart</em>, you’d actually be wrong. Because the model had only been trained on successful runs, it had zero clue on how to course correct when something went awry. As Christian explains:</p>
<blockquote class="blockquote">
<p>At its root, the problem stems from the fact that the learner sees an expert execution of the problem—and an expert almost never gets into trouble. No matter how good the learner is, though, they will make mistakes, whether blatant or subtle. But because the learner never saw the expert get into trouble, they’ve also never seen the expert get out.</p>
</blockquote>
<p>The situation can be summed up neatly in two of my favorite quotes:</p>
<ul>
<li><p>“An expert is a person who has made all the mistakes that can be made in a very narrow field” – Niels Bohr</p></li>
<li><p>“Everyone has a plan until they get punched in the mouth” – Mike Tyson</p></li>
</ul>
<p>So this is a post where I pull back the curtain a bit, to show how I course-correct when something doesn’t go right. To show what I do when R punches me in the mouth.<sup>2</sup> My hope is to convey both the types of impediments that give me grief when coding in R but also the types of resources I lean on and the kinds of things that I type into Google to get me on the right track. Because, yes, as a coder, I rely heavily on Google. The open secret: We all do.</p>
</section>
<section id="four-categories-of-headaches" class="level1">
<h1>Four Categories of Headaches</h1>
<p>From my experience as a practitioner and instructor of R, most frustrations people deal with, beginner and veteran alike, can be lumped into 4 categories:</p>
<ol type="1">
<li><em>I do not understand what this output\error message is telling me.</em></li>
<li><em>I understand the output plenty, but do not understand what went wrong so as to get to this point.</em></li>
<li><em>I do not know how to make this code return the type of output I expect.</em></li>
<li><em>I do not know how to make R do something that I think it should be able to do.</em></li>
</ol>
<p>For all of these, when they get to a certain level of opaqueness and complexity, I’m going to turn to <del>the oracle</del> Google. I may also turn to ChatGPT if I’m working with a popular package or framework. I’ll talk a bit about what I’ll search <em>for</em> in each case but, to avoid being redundant, I’m going to mention what sources I’ll tend to seek out once I’ve hit the results page—mostly because they’re largely the same across issue areas.</p>
<ul>
<li><a href="https://stackoverflow.com/">Stack Overflow</a>: Or other parts of the Stack Exchange network that intersect data (e.g., Cross Validated, Geographic Information Systems, Mathematics).</li>
<li>Function Documentation: You can look up the documentation for a function by writing <code>?FUNCTION_NAME</code> in the console. For instance, if I was having trouble understanding dplyr’s <code>across</code> function, I would type <code>?across</code>. You can also look at the exported functions and objects from packages by writing out the package name followed by two colons (e.g., <code>MASS::</code> or <code>ggplot2::</code>). If you want to see all objects and functions, you’d bump that up to 3 colons(<code>:::</code>).</li>
<li><a href="https://github.com">GitHub</a>: Most frequently, the github sites for individual packages. These will often have <code>github.io</code> somewhere in their domain name. I may also just go to the individual GitHub repository to see what things they leave in their “read me” files. GitHub sites are usually good for vignettes to show what sorts of things are typically done with the functions within a package (or at least what their designers had as their intent). GitHub can also be good for when you start to do more specialty/development work; the issues opened on various projects can be a goldmine.</li>
<li><a href="https://community.rstudio.com/">Posit Community Forum</a>: Previously known as the RStudio community forum, this is, as its name implies, a forum hosted by Posit (formerly RStudio), creators of RStudio. People will often go there if they aren’t able to find a good answer on other sites, and the commenters are usually quite knowledgeable, friendly, and specific with their insights and advice.</li>
<li>Package sites: In a similar vein, some packages/package families have their own sites, such as with <code>tidyverse.org</code>. So if I catch a web address where the package itself (or its larger family) is part of the domain name, then I’ll often go there for documentation.</li>
<li>Reddit: Specifically r/rstats, r/statistics, r/AskStatistics, r/rprogramming, or r/datascience.</li>
<li><a href="https://www.r-bloggers.com/">R-Bloggers</a>: R-Bloggers is a content aggregator submitted by fans (and frenemies) of the R language. I’m often shocked with how often someone has done the exact thing I want to do as a little proof-of-concept blog post as if it simply wasn’t a big deal.</li>
<li>Specialty Sites: There are a few sites that I’ve gone to often enough that I tend to trust them to at least get started. These include Analytics Vidhya and the UCLA statistics site (stats.oarc.ucla.edu). There are also some individual bloggers/educators like <a href="https://www.andrewheiss.com/blog/">Andrew Heiss</a>, <a href="https://www.ajordannafa.com/blog/">A. Jordan Nafa</a>, <a href="https://blog.djnavarro.net/">Danielle Navarro</a>, and <a href="https://twitter.com/ChelseaParlett">Chelsea Pelleriti</a> (as a verrrry abridged list) who could publish just about anything and I’ll just nod along vigorously, do my best to understand, and take their word for it.</li>
</ul>
<p>I’m going to talk about how I tend to approach errors/hiccups of these kinds. I’ll try to sprinkle in some common examples as I go.</p>
<section id="i-do-not-understand-what-this-output-is-telling-me" class="level2">
<h2 class="anchored" data-anchor-id="i-do-not-understand-what-this-output-is-telling-me">I do not understand what this output is telling me</h2>
<p>The first thing I do—and I know that this is going to sound just so incredibly pedantic, but please stay with me—is do my best to read the error message <em>closely</em>.</p>
<p>Don’t get me wrong: A lot of these error messages have been written by software engineers—and software engineers aren’t known to be, uh, particularly verbose or descriptive. But, a lot of package developers, especially those in or adjacent to the <em>Tidyverse</em>, work to include more informative errors. But, even for these, you need to know what you’re looking for.</p>
<section id="descriptive-errors" class="level3">
<h3 class="anchored" data-anchor-id="descriptive-errors">Descriptive Errors</h3>
<p>Let’s say that I’m playing around with the <code>mtcars</code> dataset and I try to select a column that doesn’t exist:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">suppressPackageStartupMessages</span>(<span class="fu" style="color: #4758AB;">library</span>(tidyverse))</span>
<span id="cb1-2"></span>
<span id="cb1-3">mtcars <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-4">  <span class="fu" style="color: #4758AB;">select</span>(type) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb1-5">  <span class="fu" style="color: #4758AB;">head</span>()</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>Error in `select()`:
! Can't subset columns that don't exist.
✖ Column `type` doesn't exist.</code></pre>
</div>
</div>
<p>This error is very clear: it’s telling me that the column that I passed along to the select statement (<code>type</code>) is not a variable in the data frame. My resolution here is similarly clear: Fix what I’ve passed to the select statement so that I can get the proper output.</p>
<p>A similarly descriptive error (at least once you’ve gotten the hang of it) will come up when you invariably put in one too many (or few) of some critical character in R: <code>+</code>, <code>}</code>, <code>,</code>, <code>)</code>, <code>]</code>, etc. It will tell you that there’s an “unexpected character” somewhere and will provide you with where the incongruity is.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;">ggplot</span>(mtcars, <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> wt <span class="at" style="color: #657422;">y =</span> mpg)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;">geom_point</span>()</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>Error: &lt;text&gt;:1:27: unexpected symbol
1: ggplot(mtcars, aes(x = wt y
                              ^</code></pre>
</div>
</div>
<p>This error is admittedly a bit tricky sometimes to get your head around at first because it ostensibly crops up in the <em>absence</em> of a symbol and not just the “unexpected presence” of one. But it makes more sense once you remember that <code>y</code> is indeed a symbol and it isn’t expected there—function arguments are supposed to be separated by <code>,</code>s!</p>
<p>Normally when I see <code>unexpected symbol</code> errors, my first thought is to make sure that I’m balanced on the number of left-hand symbols (i.e., <code>[</code>, <code>(</code>, <code>{</code>) and right hand symbols (<code>]</code>, <code>)</code>, <code>}</code>); if you’ve got one on the left, you need one on the right and vice-versa. Then I’ll check for errant commas—or that they are where they’re supposed to be.</p>
</section>
<section id="less-descriptive-errors" class="level3">
<h3 class="anchored" data-anchor-id="less-descriptive-errors">Less Descriptive Errors</h3>
<p>Some errors require a bit more understanding of R as a programming language to parse before they become “obvious.” Say that I want to add a new column to the mtcars data. This will work:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">mtcars<span class="sc" style="color: #5E5E5E;">$</span>new_col <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>)</span></code></pre></div>
</div>
<p>This will not:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">mtcars<span class="sc" style="color: #5E5E5E;">$</span>new_col <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>)</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>Error in `$&lt;-.data.frame`(`*tmp*`, new_col, value = c(1, 2, 3)): replacement has 3 rows, data has 32</code></pre>
</div>
</div>
<p>Yet this will:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">mtcars<span class="sc" style="color: #5E5E5E;">$</span>new_col <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">4</span>)</span></code></pre></div>
</div>
<p>And, again, this will not.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">mtcars <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">new_col =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">2</span>))</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>Error in `mutate()`:
ℹ In argument: `new_col = c(1, 2)`.
Caused by error:
! `new_col` must be size 32 or 1, not 2.</code></pre>
</div>
</div>
<p>Why does it matter that this vector has 3 and that the data has 32?! 2 and 4 seemed fine! And why did 2 work for base R but fail in the <code>mutate</code> context?</p>
<p>Well, because R allows for this thing called “recycling.” Basically, if you try to put two unequal vectors together but one of them can evenly divide into the other, R will “recycle” the values over and over again until they fill out the space.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;">data.frame</span>(<span class="at" style="color: #657422;">x =</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">6</span>, <span class="at" style="color: #657422;">y =</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  x y
1 1 1
2 2 2
3 3 1
4 4 2
5 5 1
6 6 2</code></pre>
</div>
</div>
<p>3 doesn’t divide evenly into 32, so an error crops up there. However, <a href="https://cran.r-project.org/web/packages/dplyr/vignettes/dplyr.html#:~:text=In%20the%20same%20way%2C%20you%20can%20unquote%20values%20from%20the%20context%20if%20these%20values%20represent%20a%20valid%20column.%20They%20must%20be%20either%20length%201%20(they%20then%20get%20recycled)%20or%20have%20the%20same%20length%20as%20the%20number%20of%20rows.">dplyr’s mutate doesn’t recycle values greater than 1</a>. It’s a quirk of that package. You will come to learn many of the quirks of the packages you use most often. But, in both cases, R told you exactly what was wrong although it only told you <em>why</em> that was an issue with <code>mutate</code>.</p>
</section>
<section id="nondescriptive-errors" class="level3">
<h3 class="anchored" data-anchor-id="nondescriptive-errors">Nondescriptive Errors</h3>
<p>Let’s say that you’re returning to your script in a new session. You were trying to filter <code>mtcars</code> by those with a value of 4 for the <code>cyl</code> column.</p>
<div class="cell">
<div class="cell-output cell-output-stderr">
<pre><code>Warning: 'dplyr' namespace cannot be unloaded:
  namespace 'dplyr' is imported by 'tidyr' so cannot be unloaded</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">mtcars <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;">filter</span>(cyl <span class="sc" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">4</span>)</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>Error in filter(., cyl == 4): object 'cyl' not found</code></pre>
</div>
</div>
<p>Ok. No problem. You’ll just go to a different part of your script where you saved a dataframe as <code>df</code> and looked at the top 6 values:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;">head</span>(df)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                                              
1 function (x, df1, df2, ncp, log = FALSE)    
2 {                                           
3     if (missing(ncp))                       
4         .Call(C_df, x, df1, df2, log)       
5     else .Call(C_dnf, x, df1, df2, ncp, log)
6 }                                           </code></pre>
</div>
</div>
<p>Ok that’s not an error, but what even is it?!</p>
<p>There are other cases that I’ve come across where R will warn me about something going wrong with a Hessian, or that some object is or isn’t subsetable, or that something or another is singular. Sometimes, I will have absolutely no idea what this means! So what do I do? Google it!</p>
</section>
<section id="the-common-solution" class="level3">
<h3 class="anchored" data-anchor-id="the-common-solution">The Common Solution</h3>
<p>Usually, I’ll copy the first full line or sentence of the error and pop it right into Google. However, I don’t usually copy in the full error if there’s text in there that I recognize as being driven by my specific input—like a column or object name. Including things that are only driven by what I’ve personally done in the search might reduce the number of helpful hits I’ll get.<sup>3</sup> So I’ll go for the longest uninterrupted part of the error that doesn’t seem to contain something specific to my call.</p>
<p>This will usually bring me to a Stack Overflow or to another forum. Good ones tell you what to do with your code so that you can keep on trucking. The <strong>great</strong> ones are those that explain what the code they’re suggesting does on an intuitive level. The <strong><em>best</em></strong> ones do all that plus provide alternative ways of approaching the problem and/or explain in clear language why the original error came up in the first place.</p>
</section>
</section>
<section id="i-understand-the-output-plenty-but-dont-know-how-i-even-got-here" class="level2">
<h2 class="anchored" data-anchor-id="i-understand-the-output-plenty-but-dont-know-how-i-even-got-here">I understand the output plenty but don’t know how I even got here</h2>
<p>Let me give an example of this happening on a project I did at my last job.</p>
<section id="regressing-in-a-regression-problem" class="level3">
<h3 class="anchored" data-anchor-id="regressing-in-a-regression-problem">Regressing in a Regression Problem</h3>
<p>I was working on functionalizing a type of analysis and spent some time with a logistic regression model. I wanted to predict outcomes from the approach I was testing to ensure it spat out reasonable estimates. First time I ran it, everything went fine—I got back a set of predicted probabilities all within the ballpark that I was expecting. I turned my attention to a marginal improvement I wanted to make in the function’s speed. Came back and re-ran the model. My predictions came back and everyone was either a 0 or a 1. Which is to say, <em>not at all a reasonable set of predictions.</em> Why did it just work before and why was it breaking all of a sudden?!</p>
</section>
<section id="data-by-another-name" class="level3">
<h3 class="anchored" data-anchor-id="data-by-another-name">Data by Another Name</h3>
<p>Here’s another example that tosses an error that might be fairly familiar. Let’s say that I import in a data set and I try to summarize the mean values of a column I’m interested in (in this case, it’s the <code>penguins</code> data from the <code>{palmerpenguins}</code> package and I’m interested in bill_length_mm).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;">library</span>(palmerpenguins)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: package 'palmerpenguins' was built under R version 4.2.3</code></pre>
</div>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">dat4 <span class="ot" style="color: #003B4F;">&lt;-</span> penguins</span>
<span id="cb20-2"></span>
<span id="cb20-3">data <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb20-4">  dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">group_by</span>(species) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb20-5">  dplyr<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">summarise</span>(bill_length_mm)</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>Error in UseMethod("group_by"): no applicable method for 'group_by' applied to an object of class "function"</code></pre>
</div>
</div>
<p>What do you mean a function?! I’m not passing a function, I’m passing data!<br>
<br>
Or, at least, I thought I was. This bit of code is short enough that you should be able to catch it—the data is called <code>dat4</code> but I’m invoking <code>data</code>—which, until it’s assigned something else, is actually the name of a base R function. But if you’re working in a longer script and not being careful/deliberate with your names, this sort of thing can drive you crazy for a few minutes as you question your sanity.</p>
</section>
<section id="the-common-solution-1" class="level3">
<h3 class="anchored" data-anchor-id="the-common-solution-1">The Common Solution</h3>
<p>The causes for this sort of frustration usually boil down to people not working in what I’ll call a “linear” fashion. There’s a reason why folks who have been doing this a while insist that your script should be executable running it top to bottom without having to circle back or anything. But many practitioners (especially those who don’t have a strong coding background)<sup>4</sup> will jump around in their scripts to tinker with this, try that out, maybe open up a new file and run some of the code in there. This also very frequently happens to folks who are new to RMarkdown or Quarto who have their test output coming out correctly because they ran chunks individually—but out of order. When it comes time to knit/render, they’re stymied by errors claiming that objects don’t exist <em>but they can see the damn things in their environment—what do you mean they don’t exist?!</em>.</p>
<p>The resulting analysis is one riddled with hidden dependencies or processes to work properly. This is pretty obvious with the second example, no data objects had been assigned to <code>data</code> so R still reserved that set of characters to refer to the function. (Which is actually a good tie-in to the first section: The error is telling you exactly what’s going wrong!). In the first example, my original data set had scaled predictors but then, in my quest to squash the minor thing, I overwrote that dataframe object to something with the same column names <em>without</em> scaled predictors. But I never updated the trained model. The result was that this “test” data had way more extreme values compared to the “training” data and, thus, everyone was given either 0s or 1s.</p>
<p>More often than not, if you’re getting an error or output that appears to make no sense in the context of the thing that you’re trying to do, the best advice is to take a short break and come back to the problem with fresh eyes. In order to prevent it from happening in the first place, frequently restart your session and make sure that you can get back right where you were with the code you’ve already written without having to do anything fancy. That means running your code top-to-bottom.</p>
</section>
</section>
<section id="i-do-not-know-how-to-make-this-code-return-the-type-of-output-i-expect" class="level2">
<h2 class="anchored" data-anchor-id="i-do-not-know-how-to-make-this-code-return-the-type-of-output-i-expect">I do not know how to make this code return the type of output I expect</h2>
<p>A related, but distinct, issue from the previous one is when you have a clear vision in your mind for what you’d like to accomplish but you can’t quite seem to figure out how to get the data to behave the way you’d like. This often happens to me when I’m designing a function and I know how I want the <em>output</em> to look, but I’m having a tough time figuring out how to get there from the input. Another, perhaps more common, example is trying to ingest data and/or manipulate a dataframe so as to create something structured like the outcome you have in mind. (Say, for instance, that I’m trying to take wide-formatted data and pivot it into long formatted data, but I need summary statistics and only a select few columns). There are few things more frustrating than having a gist of what you’re hunting for but not being able to actually see it to fruition.</p>
<section id="common-solutions" class="level3">
<h3 class="anchored" data-anchor-id="common-solutions">Common Solutions</h3>
<section id="start-with-the-end-in-mind" class="level4">
<h4 class="anchored" data-anchor-id="start-with-the-end-in-mind">Start with the end in mind</h4>
<p>Oftentimes these problems will come up because we are trying to get data of some sort “shaped” in a particular way—usually not for its own sake but to prepare it for some additional step. But I find that one of the most helpful <em>first</em> steps you can take is to take a moment to fully flesh out what this subsequent step will take for you to be successful. What type of input is necessary? Does it require a vector, a list, a dataframe? How many values, of what type(s), do they have to be named—if so, are their any requirements or restrictions? Can they have <code>NA</code>/<code>NULL</code>/<code>Inf</code> values? Sketch out<sup>5</sup> what you need things to finish as. Just like solving a maze by starting at the end, sometimes this can clarify the direction you have to take.</p>
<p>Once you’ve done that, continue to work backwards. Compare the number of rows/columns/values in what you need compared to what you started with. Think about what data manipulation functions and/or summary operations you’ll need to do to go from each step to the next.<sup>6</sup> This may require some trial and error so, once you’re done, please be sure to clean up your code so that it runs top-to-bottom so that you don’t run into the mistake we were just talking about in the previous section.</p>
</section>
<section id="stand-on-the-shoulders-of-giants" class="level4">
<h4 class="anchored" data-anchor-id="stand-on-the-shoulders-of-giants">Stand on the shoulders of giants</h4>
<p>Oftentimes, for the work performed the vast majority of the time, the maintainers of the packages you are using for your transformation(s) have probably created tutorials or vignettes on how to do at least some of the steps that you’re looking to do. You don’t need to relearn how to pivot tables from wide to long and vice-versa: that documentation already exists in a way to easily grock the concepts! So when I google for things with this type of headache, I tend to keep an eye out for tutorials (on personal blogs and R-Bloggers) and on package vignettes. You may have to string multiple vignettes together to fully traverse the gap between your start and ideal end-state, but these resources can be tremendously useful. My google strategy here is to type in “how to do <code>xyz</code> in R” where “<code>xyz</code>” will refer not to my overall aim but to the specific kind of function/operation that I want to perform to complete the next step. (And, if you know the package you’re using/need to use—add it to the search query).</p>
<p>A tool that’s becoming increasingly useful for this is ChatGPT, especially GPT4, and other Large Language Models (LLMs). If you ask the model to not only help you take your input data and translate it to the output format you sketched earlier but to also <strong><em>explicitly detail the steps involved</em></strong> it will be able to do that pretty well. Here is an excerpt from an example of me doing this with GPT3 with scraping a table from Wikipedia.</p>
<p><img src="www.peterlicari.com/posts/r-punch-in-face-23/images/chat_gpt.png" class="img-fluid"></p>
<p>You can also provide it your code as you currently have it and explain what you’re trying to do and it can help you debug and show you what to do instead to get to your desired endpoint.</p>
<p>LLMs aren’t perfect, but if you have a sense of where you’re starting, and you know where you’re going, it can provide tremendous savings in your overall coding time. It may require you to troubleshoot some errors but it’ll often be a net benefit to have code that gets you 70-80% of the way there rather than try to code it all from scratch yourself. This may break down if you’re trying to do something particularly novel or niche though. In that case, it may help to return to the Internet and/or break the problem down into more discrete steps.</p>
<p>In any event: Whether you use an LLM, Google, or you brute-force it yourself—the most helpful solution to this I’ve found is to have a concrete vision of where you want to go, an understanding of where you are, and a roadmap for the discrete steps you will have to take to get there.</p>
</section>
</section>
</section>
<section id="i-do-not-know-how-to-make-r-do-something-that-i-think-it-should-be-able-to-do." class="level2">
<h2 class="anchored" data-anchor-id="i-do-not-know-how-to-make-r-do-something-that-i-think-it-should-be-able-to-do.">I do not know how to make R do something that I think it should be able to do.</h2>
<p>For me, very few things are as frustrating as <em>knowing</em> that I know how to do something but finding myself flailing when actually executing it. There’s a icy panic that hits as you grasp at tendrils of a solution only to realize that you’re merely catching smoke. Then a deep frustration, almost shame, at being failed by the organ that happens to also do the bulk of constituting what you think of as “you” —and cue you sitting here wondering why you’re under-performing: if you’re just tired, stressed, or experiencing early-onset dementia. (This happens to me a lot if you haven’t guessed).</p>
<p>For me, there are four common reasons for this to come up:</p>
<section id="youve-done-this-kind-of-thing-before-just-cant-remember-the-steps." class="level3">
<h3 class="anchored" data-anchor-id="youve-done-this-kind-of-thing-before-just-cant-remember-the-steps.">1. You’ve done this kind of thing before, just can’t remember the steps.</h3>
<p>This is why I unironically say that you should save every finalized line of code. Every. Line. And you should do your best to comment and format your code in such a way that you could return to it in 6 months and know what’s going on (e.g., using a consistent naming convention, commenting periodically, using names that make sense for your objects rather than just <code>temp</code><sup>7</sup>). Storage is cheap and storing this will not be an issue for the vast majority of people who use R. There is absolutely no shame in going back and reusing your own code. Do not, I repeat, <strong>do not</strong> feel like you have to code every new project from scratch.</p>
<p>If you’ve lost your code or you didn’t format it so that it runs cleanly top-to-bottom, chances are that you had a little help before in the form of tutorials and vignettes. Ideally this time, you’ll vaguely recall a search string that at least got you going down the right rabbit hole (it helps if you remember where you got the info from so that you can add it to your search term).</p>
</section>
<section id="youve-worked-with-this-particular-function-before-and-are-pretty-sure-its-capable-of-doing-what-you-envision." class="level3">
<h3 class="anchored" data-anchor-id="youve-worked-with-this-particular-function-before-and-are-pretty-sure-its-capable-of-doing-what-you-envision.">2. You’ve worked with this particular function before and are pretty sure its capable of doing what you envision.</h3>
<p>The help documentation is your friend! For instance, I learned that <code>{dplyr}</code>’s <code>case_when</code> function has an option now for you to specify what the default output should be.<sup>8</sup> But I couldn’t remember what it’s called. So I simply did this:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">?case_when</span></code></pre></div>
</div>
<p>Which pops up a super handy pane that provides all of the help documentation the developers of the function have written for it.</p>
<p><img src="www.peterlicari.com/posts/r-punch-in-face-23/images/case_when.png" class="img-fluid"></p>
<p>And, right there, we can see that the argument that I’m looking for is called <code>.default</code>!</p>
<p>Another example: I was trying to remove duplicated values from a dataset using <code>{dplyr}</code> ’s <code>distinct</code>. But when I got the data back, all I had was a single column. It wasn’t until I looked at the help documentation that I was reminded that the default behavior is for a parameter called <code>.keep_all</code> to be set to <code>FALSE</code>!</p>
</section>
<section id="you-know-that-this-package-has-a-function-that-is-useful-but-you-cant-remember-what-its-called." class="level3">
<h3 class="anchored" data-anchor-id="you-know-that-this-package-has-a-function-that-is-useful-but-you-cant-remember-what-its-called.">3. You know that this package has a function that is useful but you can’t remember what it’s called.</h3>
<p>This is where RStudio really comes in handy. If you type in the package name plus two colons (<code>::</code>) you can see all of the exported objects from the package. I frequently space-out on the name of the function is that drops <code>NA</code> values from dataframes. I know that it’s in the <code>{tidyr}</code> package though. So I’ll write out <code>tidyr::</code>…</p>
<p><img src="www.peterlicari.com/posts/r-punch-in-face-23/images/drop_help.png" class="img-fluid"></p>
<p>That’s it! <code>drop_na</code>!</p>
<p>This helps me a lot when I have a vague sense of what the function I’m looking for is named and/or what it generally does. Worst case, I’ll just Google something like “how to drop NA values in R.” That is, I’ll do a search emphasizing the kind of action that I want to take.</p>
</section>
<section id="i-feel-like-the-sort-of-thing-i-want-should-be-possible-but-i-dont-know-how-to-do-it." class="level3">
<h3 class="anchored" data-anchor-id="i-feel-like-the-sort-of-thing-i-want-should-be-possible-but-i-dont-know-how-to-do-it.">4. I feel like the sort of thing I want <em>should</em> be possible but I don’t know how to do it.</h3>
<p>I know that this will come as a terrible, Earth-shattering shock—but my recommendation here is to use either Google or a decent LLM. If you’re going the first route, it’s helpful to articulate what kind of end goal you have in mind. For instance, if I wanted to make a Waffle chart, I could Google “make waffle chart ggplot”. If I wanted to learn how to implement an upload box into my shiny app, I would go “add upload button shiny” or something to that effect. Even if I had a vaguer sense of what I wanted to do, I can type out what my end goal is and stick an “in R” at the end. (e.g., “how do I do bayesian regression in R?”, “how do I make interactive maps in R?”, “how can I connect to aws in R”, etc.). From there, find some code that others say works for the specific use case described on the page/in the forum/in the solution and apply it to yours. If you run into errors, follow the guidelines I’ve mentioned elsewhere in the post. As I mentioned at the top, learning R isn’t about knowing everything—it’s knowing that you don’t know, but learning that it’s necessary to ask!</p>
</section>
</section>
</section>
<section id="my-general-problem-solving-framework" class="level1">
<h1>My General Problem-Solving Framework</h1>
<p>Most of the roadblocks that I run into when I work in R can be resolved with the following general sequence of steps.</p>
<ul>
<li><p><strong>Start by fact-finding to identify a potential solution to your problem.</strong></p></li>
<li><p><strong>Test the potential solution with a prototype or minimal working example.</strong></p></li>
<li><p><strong>If it fails, tweak solution to match your context until it provides the output you were hoping for.</strong></p></li>
<li><p><strong>Apply solution to your original problem.</strong></p></li>
<li><p><strong>Revel in your success.</strong></p></li>
</ul>
<p>While this sounds like a pretty straight-forward chain, for problems of any decent complexity, it actually winds up looking a lot more like this:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<p>
</p><pre class="mermaid mermaid-js" data-tooltip-selector="#mermaid-tooltip-1">flowchart TD

  A((Scope-out\nFact-Find)) ----&gt;|Found\nSomething|B((Prototype\nPossible\nSolution))
  B --&gt;|It\nworks|E((Test on\nLarger\\nFull Issue))
  B -.-|"Fails; no\nidea why"|A
  E --&gt;|It\nworks|C[Success]
  E -.-&gt;|"Fails; no\nidea why"|A
  E -.-&gt;|"Fails; you\ngot a hunch"|B
  B -.-&gt;|"Fails; you\ngot a hunch"| D((Tweak\nSolution))
  D --&gt;|It\nworks|C
  D -.-&gt;|"Fails; you\ngot a hunch"|B
  D -.-&gt;|"Fails; no\nidea why"| A((Fact-Find))
  C -.-&gt;F{Revel?}
  

</pre>
<div id="mermaid-tooltip-1" class="mermaidTooltip">

</div>
<p></p>
</div>
</div>
</div>
<p><strong><em>and that’s entirely normal.</em></strong> People think of coding as purely left-brain, rigid, logical but it’s actually a fundamentally creative act. Subsequently, learning how to do it is going to be a bit circuitous as you lay down bits of new rote knowledge in your brain and cultivate the kinds of connections between them that creative acts tend to entail: Less embarking on a mechanical sequence of steps, and more the calibrated free-fall of trundling down a staircase in the dark.</p>
</section>
<section id="if-you-literally-remember-nothing-else" class="level1">
<h1>If you literally remember nothing else:</h1>
<p>If something isn’t happening the way that you need it to in R, the first step is to gather information from trusted sources. This should clue you in to possible solutions. Test these solutions. If it works, great! If not, rinse and repeat.</p>
<p><em>That’s it.</em> That’s all the magic. The trick is to do it often enough to know for when you need to search for <strong>general</strong> solutions (e.g., packages &amp; tutorials) versus <strong>specific</strong> solutions (e.g., code-snidbits to resolve an error or achieve a desired output); and when you need to search for <strong>novel</strong> solutions versus <strong>already discovered</strong> solutions. (And to be able to intuit from the feedback R gives you whether this is something that even needs to be searched in the first place! Once you’ve clocked enough hours under your belt, you come to be intimately familiar with the usual suspects—so you’ll have a sense of when someone would be liable to prompt that feedback and, consequently, have a sense of where in your code it’s likely to crop up.)</p>
<p>I hope this guide has been helpful to you. Hopefully now you feel a little less intimidated by R and more empowered to expand your skills.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>My first R class was in the summer of 2016, but I didn’t start consistently working with it until about 2018.↩︎</p></li>
<li id="fn2"><p>There’s a <code>Type closure is not subsettable</code> joke to be made here.↩︎</p></li>
<li id="fn3"><p>Plus! Learning to identify the parts of the error message that are more unique to your circumstance will help you get better at isolating the parts of the message that are trying to convey <strong>what’s</strong> wrong rather than <em>where</em> the wrong thing originates from.↩︎</p></li>
<li id="fn4"><p>It’s me. Hi. I’m the problem it’s me.↩︎</p></li>
<li id="fn5"><p>I’ve found it helpful to take this literally and just doodle how I want the output to look like in terms of its size, “shape”, and necessary column structure.↩︎</p></li>
<li id="fn6"><p>It helps to be familiar with packages like <code>dplyr</code> , <code>data.table</code> , and <code>tidyr</code> to know the kinds of steps that are even possible. This can be done through gradual immersion into R (the best way), or through Googling/LLMing (to coin a phrase) through a game of keyword telephone until you strike one that seems to describe the step you’re wanting to take. I know that that last one sounds more hacky and amateur but that is also a completely valid way of learning to make things happen—especially if you’re on a tight deadline.↩︎</p></li>
<li id="fn7"><p>Hi Kettle, you can call me Pot.↩︎</p></li>
<li id="fn8"><p>When I first learned it, any case that wasn’t covered in the listed cases was set to <code>NA</code> unless you did something like <code>TRUE ~ 0</code> (presuming you wanted 0 to be your default).↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{licari2023,
  author = {Peter Licari},
  title = {What to Do When {R} Punches You in the Mouth},
  date = {2023-04-04},
  url = {www.peterlicari.com/posts/r-punch-in-face-23},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-licari2023" class="csl-entry quarto-appendix-citeas">
Peter Licari. 2023. <span>“What to Do When R Punches You in the
Mouth.”</span> April 4, 2023. <a href="https://www.peterlicari.com/posts/r-punch-in-face-23">www.peterlicari.com/posts/r-punch-in-face-23</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>tutorial</category>
  <guid>www.peterlicari.com/posts/r-punch-in-face-23/index.html</guid>
  <pubDate>Tue, 04 Apr 2023 04:00:00 GMT</pubDate>
  <media:content url="www.peterlicari.com/posts/r-punch-in-face-23/images/title_card.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Simulating My Daughter’s First Board Game in Python</title>
  <dc:creator>Peter Licari</dc:creator>
  <link>www.peterlicari.com/posts/rosie-game-sim-23/index.html</link>
  <description><![CDATA[ 



<section id="learning-to-play" class="level2">
<h2 class="anchored" data-anchor-id="learning-to-play">Learning to play</h2>
<blockquote class="blockquote">
<p><strong>Children learn as they play. Most importantly, in play children learn how to learn.</strong></p>
<p>- <a href="https://www.museumofplay.org/about/play-quotes/#:~:text=Children%20learn%20as%20they%20play.%20Most%20importantly%2C%20in%20play%20children%20learn%20how%20to%20learn.">O. Fred Donaldson</a></p>
</blockquote>
<p>Not too long ago, my grandparents gifted my daughter her first board game: <a href="https://www.amazon.com/HABA-Very-First-Games-Cooperative/dp/B004BW8TYC">First Orchard</a>. It’s a simple little game that aims to teach kids how to follow game rules and how to take turns, as well as reinforcing toddler basics like counting, hand-eye coordination<sup>1</sup>, and colors. Here’s the premise:</p>
<ul>
<li><p>There are four, different colored “trees” in the gamespace (“orchard”; probably played on the floor) with four fruit apiece: Green apples, yellow pears, red apples, and blue plums.</p></li>
<li><p>There is a hungry crow that will eat all of the fruit if they make it into the orchard; they start the game five movements away.</p></li>
<li><p>There is a six-sided dice. Four of the sides correspond to the colors of the tree (green, yellow, red, blue), a basket that allows you to take from any tree, and one has a image of a crow.</p></li>
<li><p>Players take turn rolling the dice. If they get a color, they take a fruit from the tree associated with that color. If all the fruit has already been picked, nothing happens. If a basket is rolled, then the player can pick a fruit from any tree. If the crow is rolled, the crow is advanced one space.</p></li>
<li><p>The game ends when all of the fruit has been picked from the tree (the players collectively win!) or when the crow reaches the orchard (the players lose).</p></li>
</ul>
<p>As I spent time playing<sup>2</sup> with my daughter, I realized that we were winning. <em>A lot</em>. Which made sense to me. One lesson that all children (and all us children grown tall) must learn is how to lose—but it’s admittedly far easier to teach a kid how to follow rules if they think there’s a strong chance that the rules will lead to success. (Though not a perfect chance so that the game is engaging and has risk and stakes). I wondered though: Were we just on a lucky streak or is the game actually biased towards the players? How long do the games usually take? Are there different average lengths between successes and failures? And if it <em>is</em> biased, how much more likely is success than failure?</p>
</section>
<section id="simulating-the-game-in-python" class="level2">
<h2 class="anchored" data-anchor-id="simulating-the-game-in-python">Simulating the game in python</h2>
<p>In order to see how generous this game is to the players, I decided to code it up in python.</p>
<section id="set-up" class="level3">
<h3 class="anchored" data-anchor-id="set-up">Set-up</h3>
<p>First I imported my libraries, made a quick little “roll the dice” function, and then setup an empty array for the results:</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> seaborn <span class="im" style="color: #00769E;">as</span> sb</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">import</span> scipy <span class="im" style="color: #00769E;">as</span> sp</span>
<span id="cb1-5"></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="kw" style="color: #003B4F;">def</span> die_roll():</span>
<span id="cb1-8"> roll <span class="op" style="color: #5E5E5E;">=</span>  np.random.randint(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">7</span>,<span class="dv" style="color: #AD0000;">1</span>)[<span class="dv" style="color: #AD0000;">0</span>]</span>
<span id="cb1-9"> <span class="cf" style="color: #003B4F;">return</span>(roll)</span>
<span id="cb1-10"></span>
<span id="cb1-11"></span>
<span id="cb1-12">results <span class="op" style="color: #5E5E5E;">=</span> []</span></code></pre></div>
</div>
<p>From here, we can actually get down to articulating the rules/procedures of the game in python.</p>
</section>
<section id="encoding-the-game-rules-in-well-code" class="level3">
<h3 class="anchored" data-anchor-id="encoding-the-game-rules-in-well-code">Encoding the game rules in, well, code</h3>
<section id="game-start" class="level4">
<h4 class="anchored" data-anchor-id="game-start">Game Start</h4>
<p>First, let’s get the game instantiated. We start with 4 different colored “trees” with 4 fruit apiece, a crow that needs to move 5 spaces before getting to the “orchard” (<code>-5</code>) , the number of turns that have elapsed (starting at zero), and the “orchard”—the collection of trees and the number of fruit that have yet to be picked (16 to start)</p>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">red <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">4</span></span>
<span id="cb2-2">green <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">4</span></span>
<span id="cb2-3">yellow <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">4</span></span>
<span id="cb2-4">blue <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">4</span></span>
<span id="cb2-5">crow <span class="op" style="color: #5E5E5E;">=</span> <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb2-6">turns <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span>  </span>
<span id="cb2-7">  </span>
<span id="cb2-8">orchard <span class="op" style="color: #5E5E5E;">=</span> [red,green,yellow,blue]</span>
<span id="cb2-9">orchard_sum <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">sum</span>(orchard)</span>
<span id="cb2-10"></span>
<span id="cb2-11">orchard_sum</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>16</code></pre>
</div>
</div>
<p>The game continues while either the sum of fruit in the orchard is <em>greater</em> than 0 or the crow’s distance is <em>less</em> than zero . So going to use a while loop. Every loop is going to be a turn; so every go round is going to increment <code>turn</code> and roll the dice.</p>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="cf" style="color: #003B4F;">while</span> orchard_sum <span class="op" style="color: #5E5E5E;">!=</span> <span class="dv" style="color: #AD0000;">0</span> <span class="kw" style="color: #003B4F;">and</span> crow <span class="op" style="color: #5E5E5E;">!=</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb4-2">  turns <span class="op" style="color: #5E5E5E;">+=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb4-3">  roll <span class="op" style="color: #5E5E5E;">=</span> die_roll()</span></code></pre></div>
</div>
<p>Depending on how that roll lands we’re going to do one of a few things:</p>
</section>
<section id="advance-the-crow" class="level4">
<h4 class="anchored" data-anchor-id="advance-the-crow">Advance the crow:</h4>
<p>Move the crow forward if the dice lands on a 6.</p>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="cf" style="color: #003B4F;">if</span> roll <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">6</span>:</span>
<span id="cb5-2">  crow <span class="op" style="color: #5E5E5E;">+=</span> <span class="dv" style="color: #AD0000;">1</span></span></code></pre></div>
</div>
</section>
<section id="take-from-a-specific-tree" class="level4">
<h4 class="anchored" data-anchor-id="take-from-a-specific-tree">Take from a specific tree:</h4>
<p>Since I defined <code>orchard</code> as <code>[red,green,yellow,blue]</code>, rolling a 1 will take from the red tree, 2 will take from green, 3 from yellow, 4 from blue—but only if the tree that was rolled actually has some fruit left! Otherwise, no action happens.</p>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="cf" style="color: #003B4F;">elif</span> <span class="dv" style="color: #AD0000;">1</span> <span class="op" style="color: #5E5E5E;">&lt;=</span> roll <span class="op" style="color: #5E5E5E;">&lt;=</span> <span class="dv" style="color: #AD0000;">4</span>:</span>
<span id="cb6-2">  <span class="cf" style="color: #003B4F;">if</span> orchard[roll<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>] <span class="op" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb6-3">    orchard[roll<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>] <span class="op" style="color: #5E5E5E;">=</span> orchard[roll<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>] <span class="op" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb6-4">  <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb6-5">    <span class="cf" style="color: #003B4F;">continue</span></span></code></pre></div>
</div>
</section>
<section id="take-from-any-tree" class="level4">
<h4 class="anchored" data-anchor-id="take-from-any-tree">Take from <em>any</em> tree</h4>
<p>This one took a bit of thinking. What I decided to do was first ensure that all of the trees weren’t already at 0. If they weren’t then I decided to take from the tree with the most amount of fruit remaining. My thought being that, while it might feel good as a player to wrap-up a tree and bring it to zero, that would effectively prematurely eliminate one of the sides of the dice from doing anything productive. I had the feeling that a longer game would be biased towards the crow so I wanted to avoid that as much as possible.</p>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="cf" style="color: #003B4F;">elif</span> roll <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">5</span>:</span>
<span id="cb7-2">  <span class="cf" style="color: #003B4F;">if</span> <span class="bu" style="color: null;">max</span>(orchard) <span class="op" style="color: #5E5E5E;">!=</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb7-3">    largest_remaining <span class="op" style="color: #5E5E5E;">=</span> orchard.index(<span class="bu" style="color: null;">max</span>(orchard))</span>
<span id="cb7-4">    orchard[largest_remaining] <span class="op" style="color: #5E5E5E;">=</span> orchard[largest_remaining] <span class="op" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb7-5">  <span class="cf" style="color: #003B4F;">else</span> :</span>
<span id="cb7-6">    <span class="cf" style="color: #003B4F;">continue</span></span></code></pre></div>
</div>
</section>
<section id="ending-the-turn-and-game" class="level4">
<h4 class="anchored" data-anchor-id="ending-the-turn-and-game">Ending the turn (and game)</h4>
<p>Finally, determining the new sum in the orchard to determine if it’s time to kill the while loop. But, before the loop is killed, determining if the player or the crow is the winner.</p>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">orchard_sum <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">sum</span>(orchard)</span>
<span id="cb8-2"><span class="cf" style="color: #003B4F;">if</span> game_sum <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb8-3">  winner <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb8-4"><span class="cf" style="color: #003B4F;">elif</span> crow <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb8-5">  winner <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span></code></pre></div>
</div>
<p>And then, once the loop is broken, recording whether the player was the winner and the number of turns it took.</p>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">results.append({<span class="st" style="color: #20794D;">'winner'</span>:winner, <span class="st" style="color: #20794D;">'turns'</span>:turns})</span></code></pre></div>
</div>
</section>
</section>
<section id="running-the-simulation" class="level3">
<h3 class="anchored" data-anchor-id="running-the-simulation">Running the simulation</h3>
<p>Let’s go ahead and run this 10,000 times to get a sense of the game’s asymptotic behavior. You can click on the arrow to see how all the code comes together.</p>
<div class="cell" data-execution_count="9">
<details>
<summary>10,000 simulated games</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">np.random.seed(<span class="dv" style="color: #AD0000;">131313</span>)</span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="cf" style="color: #003B4F;">for</span> x <span class="kw" style="color: #003B4F;">in</span> <span class="bu" style="color: null;">range</span>(<span class="dv" style="color: #AD0000;">0</span>,<span class="dv" style="color: #AD0000;">10000</span>):</span>
<span id="cb10-4"></span>
<span id="cb10-5">  red <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">4</span></span>
<span id="cb10-6">  green <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">4</span></span>
<span id="cb10-7">  yellow <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">4</span></span>
<span id="cb10-8">  blue <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">4</span></span>
<span id="cb10-9">  crow <span class="op" style="color: #5E5E5E;">=</span> <span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb10-10">  turns <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb10-11">  </span>
<span id="cb10-12">  orchard <span class="op" style="color: #5E5E5E;">=</span> [red,green,yellow,blue]</span>
<span id="cb10-13">  orchard_sum <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">sum</span>(orchard)</span>
<span id="cb10-14">  </span>
<span id="cb10-15"></span>
<span id="cb10-16">  </span>
<span id="cb10-17">  <span class="cf" style="color: #003B4F;">while</span> orchard_sum <span class="op" style="color: #5E5E5E;">!=</span> <span class="dv" style="color: #AD0000;">0</span> <span class="kw" style="color: #003B4F;">and</span> crow <span class="op" style="color: #5E5E5E;">!=</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb10-18">  </span>
<span id="cb10-19">    roll <span class="op" style="color: #5E5E5E;">=</span> die_roll()</span>
<span id="cb10-20">    turns <span class="op" style="color: #5E5E5E;">+=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb10-21">  </span>
<span id="cb10-22">    </span>
<span id="cb10-23">    <span class="cf" style="color: #003B4F;">if</span> <span class="dv" style="color: #AD0000;">1</span> <span class="op" style="color: #5E5E5E;">&lt;=</span> roll <span class="op" style="color: #5E5E5E;">&lt;=</span> <span class="dv" style="color: #AD0000;">4</span>:</span>
<span id="cb10-24">      <span class="cf" style="color: #003B4F;">if</span> orchard[roll<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>] <span class="op" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb10-25">        orchard[roll<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>] <span class="op" style="color: #5E5E5E;">=</span> orchard[roll<span class="op" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span>] <span class="op" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb10-26">      <span class="cf" style="color: #003B4F;">else</span>:</span>
<span id="cb10-27">        <span class="cf" style="color: #003B4F;">continue</span></span>
<span id="cb10-28">      </span>
<span id="cb10-29">    </span>
<span id="cb10-30">    <span class="cf" style="color: #003B4F;">elif</span> roll <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">5</span>:</span>
<span id="cb10-31">      </span>
<span id="cb10-32">      <span class="cf" style="color: #003B4F;">if</span> <span class="bu" style="color: null;">max</span>(orchard) <span class="op" style="color: #5E5E5E;">!=</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb10-33">        largest_remaining <span class="op" style="color: #5E5E5E;">=</span> orchard.index(<span class="bu" style="color: null;">max</span>(orchard))</span>
<span id="cb10-34">        orchard[largest_remaining] <span class="op" style="color: #5E5E5E;">=</span> orchard[largest_remaining] <span class="op" style="color: #5E5E5E;">-</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb10-35">      <span class="cf" style="color: #003B4F;">else</span> :</span>
<span id="cb10-36">        <span class="cf" style="color: #003B4F;">continue</span></span>
<span id="cb10-37">  </span>
<span id="cb10-38">    <span class="cf" style="color: #003B4F;">elif</span> roll <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">6</span>:</span>
<span id="cb10-39">      crow <span class="op" style="color: #5E5E5E;">+=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb10-40">    </span>
<span id="cb10-41">    </span>
<span id="cb10-42">    orchard_sum <span class="op" style="color: #5E5E5E;">=</span> <span class="bu" style="color: null;">sum</span>(orchard)</span>
<span id="cb10-43"></span>
<span id="cb10-44">    </span>
<span id="cb10-45">    <span class="cf" style="color: #003B4F;">if</span> orchard_sum <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb10-46">      winner <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb10-47">    <span class="cf" style="color: #003B4F;">elif</span> crow <span class="op" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">0</span>:</span>
<span id="cb10-48">      winner <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">0</span></span>
<span id="cb10-49">      </span>
<span id="cb10-50">  results.append({<span class="st" style="color: #20794D;">'winner'</span>:winner, <span class="st" style="color: #20794D;">'turns'</span>:turns})</span></code></pre></div>
</details>
</div>
<p>And convert the results dictionary into a pandas dataframe</p>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">game_data <span class="op" style="color: #5E5E5E;">=</span> pd.DataFrame(results)</span></code></pre></div>
</div>
</section>
</section>
<section id="exploring-the-results" class="level2">
<h2 class="anchored" data-anchor-id="exploring-the-results">Exploring the Results</h2>
<p>Let’s take a look at how often people win the game!</p>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">sb.catplot(data <span class="op" style="color: #5E5E5E;">=</span> game_data, kind <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"count"</span>, </span>
<span id="cb12-2">x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"winner"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>&lt;seaborn.axisgrid.FacetGrid at 0x2a72bc2b7d0&gt;</code></pre>
</div>
<div class="cell-output cell-output-display">
<p><img src="www.peterlicari.com/posts/rosie-game-sim-23/index_files/figure-html/cell-12-output-2.png" width="470" height="470"></p>
</div>
</div>
<p>Seems like the players are winning it about 65% of the time! Well</p>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="bu" style="color: null;">print</span>(<span class="dv" style="color: #AD0000;">100</span> <span class="op" style="color: #5E5E5E;">*</span> game_data[<span class="st" style="color: #20794D;">"winner"</span>].mean(),<span class="st" style="color: #20794D;">"%"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>63.27 %</code></pre>
</div>
</div>
<p>Specifically.</p>
<p>Let’s see if the number of turns vary:</p>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">game_data.groupby([<span class="st" style="color: #20794D;">"winner"</span>]).mean().style.set_properties(<span class="op" style="color: #5E5E5E;">**</span>{<span class="st" style="color: #20794D;">'color'</span>:<span class="st" style="color: #20794D;">'black'</span>})</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">

<style type="text/css">
#T_0eaf7_row0_col0, #T_0eaf7_row1_col0 {
  color: black;
}
</style>
<table id="T_0eaf7">
  <thead>
    <tr>
      <th class="blank level0">&nbsp;</th>
      <th id="T_0eaf7_level0_col0" class="col_heading level0 col0">turns</th>
    </tr>
    <tr>
      <th class="index_name level0">winner</th>
      <th class="blank col0">&nbsp;</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th id="T_0eaf7_level0_row0" class="row_heading level0 row0">0</th>
      <td id="T_0eaf7_row0_col0" class="data row0 col0">18.655323</td>
    </tr>
    <tr>
      <th id="T_0eaf7_level0_row1" class="row_heading level0 row1">1</th>
      <td id="T_0eaf7_row1_col0" class="data row1 col0">22.012170</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<p>It looks like it takes longer for the player to win over the crow; if the crow’s going to win, it’s going to do so in about 19 turns. If the player wins, it’s going to take about 22 turns. May not sound like much but <strong><em>you</em></strong> try to keep a toddler’s attention for three extra turns!</p>
<p>Given how many simulations I ran, I doubt that this will be anything other than “statistically significant” but it couldn’t hurt to check.</p>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">sp.stats.ttest_ind(game_data[<span class="st" style="color: #20794D;">'turns'</span>], game_data[<span class="st" style="color: #20794D;">'winner'</span>], equal_var <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">False</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>Ttest_indResult(statistic=489.4841664968918, pvalue=0.0)</code></pre>
</div>
</div>
<p>LMAO a t stat of 489. NOW THIS IS <del>POD RACING</del> P-HACKING.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion:</h2>
<p>It looks like my daughter’s first game is pretty strongly biased towards the player winning! Simulating the game 10,000 times reveals that players can expect to win about 65% of the time. Crows tend to win faster than players; if the fruit gets munched by a pesky peckish corvid, it’s going to happen sooner rather than later. This suggests to me that if the crow wins in this particular game, it’s because the player has a streak of bad luck. I might at some point tweak the rules a bit or record more granular data to delve a bit deeper, but I think I’ll cut this for now so I can go back to, you know, playing the actual game with my daughter.</p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>If anyone has ever seen me perform a sport that isn’t running, they’d know that needing to reinforce “hand-eye coordination” isn’t exclusively a thing for toddlers—but I digress.↩︎</p></li>
<li id="fn2"><p>Well, at least playing as one does with a toddler: Initially sticking to the rules, trying to cajole them into continuing to stick with the rules, riffing off the original rules to maintain a semblance of order, finally surrendering on the concept of order—the pieces gleefully strewn across the room a reminder that “order” is but a fleeting punctuation in the ceaseless entropic chaos of existence that you try to convince the toddler to help tidy before trying to cajole them to continue tidying before…↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{licari2023,
  author = {Peter Licari},
  title = {Simulating {My} {Daughter’s} {First} {Board} {Game} in
    {Python}},
  date = {2023-02-16},
  url = {www.peterlicari.com/posts/rosie-game-sim-23},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-licari2023" class="csl-entry quarto-appendix-citeas">
Peter Licari. 2023. <span>“Simulating My Daughter’s First Board Game in
Python.”</span> February 16, 2023. <a href="https://www.peterlicari.com/posts/rosie-game-sim-23">www.peterlicari.com/posts/rosie-game-sim-23</a>.
</div></div></section></div> ]]></description>
  <category>python</category>
  <category>simulation</category>
  <guid>www.peterlicari.com/posts/rosie-game-sim-23/index.html</guid>
  <pubDate>Thu, 16 Feb 2023 05:00:00 GMT</pubDate>
  <media:content url="www.peterlicari.com/posts/rosie-game-sim-23/images/game_box.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Book Review: Theory and Reality</title>
  <dc:creator>Peter Licari</dc:creator>
  <link>www.peterlicari.com/posts/theory-reality-book-review/index.html</link>
  <description><![CDATA[ 



<blockquote class="blockquote">
<p><em>Theory and Reality</em> is an ambitious book that aims to accessibly cover a large swath of historical and philosophical ground. In many ways, it lives up to that ambition, making it well worth the read. In other, important ways though, the book occasionally devolves into muddy paste, sometimes making a <em>re</em>-reading necessary to fully grok what’s been covered.</p>
</blockquote>
<p>When I went to graduate school, my very first class was called “Scope and Epistemology”—or “Scope” for short. It was a rite of passage for all who entered UF’s political science PhD progam. Taught by the brilliant (and brilliantly kind) Larry Dodd, the course syllabus was often mistaken as one of its textbooks. The damn thing was 30 pages and outlined thousands of pages of books and articles, from Kuhn to Gleick to Mayr, Gattone, and even freaking Asimov, that meant to show us not only the diversity of practices in social science but the equally remarkable diversity of beliefs over just what the heck this thing called “science” actually is.</p>
<p>It was a whirlwind tour of epistemology, philosophy, and sociology of science. (Predominantly <em>social</em> science given, ya know, it was a poli sci PhD program—but not <em>exclusively</em> so, much to the course’s benefit). I was not unfamiliar with either philosophy or epistemology (I was a hair’s breath away from double-majoring in philosophy in undergrad), but it was an intimidating program. We were quickly reassured by more advanced students that, no, we didn’t have to “read” all of it—at least not in the sense one would read things in undergrad (a time-honored advisory that I would oft repeat many times myself to newer students, furthering the tradition). I still own many of those books and refer back to a few when I feel the need. The course cemented my latent loves of philosophy, epistemology, and science into (what I’m sure to be) a lifelong fascination: one focused with not only <strong>practicing</strong> social science but also interrogating “what even is this thing we call (social) science?” in philosophical terms.</p>
<p>Many of us came to realize that the syllabus for Scope was less a contract of expectations and more a gift. That “whirlwind tour” was a synthesis of decades of epistemological tumult that Dodd had lived through first hand. And since the issues were far from settled, I feel like he was also giving us a preview into many of the ideas and controversies we would have to grapple with ourselves over the course of our scientific careers.</p>
<p>This love is what drove me to pick up <a href="https://www.amazon.com/Theory-Reality-Introduction-Philosophy-Foundations/dp/0226300633"><em>Theory and Reality</em> by Peter Godfrey-Smith (2003)</a> from Amazon’s Audible service. <sup>1</sup><em>Theory and Reality</em> is an ambitious book that aims to accessibly cover a large swath of historical and philosophical ground. In many ways, it lives up to that ambition. In other, important ways though, the book at times does feel like it devolves into, to use Godfrey-Smith’s own verbiage, a muddy paste. There were times where I would relisten to chapters (sometimes <strong>three times)</strong> just to make sure I fully understood what was covered. I feel like the book rewards this effort, but not everyone will want to exert it. Still, what it does well, it does <em>very well</em>—making this book well worth the read.</p>
<hr>
<p>At the outset, Godfrey-Smith expresses that his overarching aim in writing this book is to convey a history of the philosophy of science; specifically a history in two senses of the word. The first is a timeline of the predominating ideas of the discipline (as well as from adjacent fields such as sociology of science): How have we conceptualized this thing we call “science,” as well the actions (both idealized and actual) of its practitioners? The second is a narrative of how said ideas (and their progenitors) interacted with each other.</p>
<p>This is more or less what he manages to do in the first half(ish) of the book. The first two substantive chapters start with brief discussion of early 20th century empiricism and its major philosophical tenets and issues (e.g., the issues of induction and confirmation), shift into a chapter on Popper, two on Kuhn (or, rather, two primarily on <em>The Structure of Scientific Revolutions</em>), a chapter on Lakatosh, Laudon, and Feyerabend (not apiece—<em>collectively</em>), a short chapter blitzing through the sociology of science in the middle third of the century, then a chapter on feminist contributions to the subject, before pivoting to naturalistic philosophy. He doesn’t do so as a impassive retrospective observer though; he frequently interjects the discussions with both critiques and endorsements to the material. This includes both those that are generally accepted in the field as well as some of his own—though his is admirably careful and forthright in which views fall into which category. He does have a tendency to be a bit dismissive of <em>some</em> ideas without motivating clear reasons why (and these instances are highlighted due to the equally discernible tendency for <em>other</em> objections to get more strenuous refutations), but his contributions, on balance, add rather than detract from the quality of the section.</p>
<p>The core argument of this first section can be crystalized as follows: The early-to-middle(late) century for philosophy of science was characterized by a schism between empiricists (e.g., positivits) and those who saw science as more an expression of social patterns rather than a distillation of empirically-identified phenomena. Both sides had incredibly novel and important insights, but both often proffered leads that turned out to be dead-ends—or overplayed their philosophical hands, cornering themselves into very strange positions (Popper’s articulation of corroboration and some sociologists’ assertion that the world is in fact <em>created</em> at a <strong>foundational</strong> level by the theories and paradigms of scientists<sup>2</sup>).</p>
<p>It’d be a lot of ground to cover even <em>without</em> the additional commentary. But Godfrey-Smith manages to do so at a high average quality, albeit with noticeable variation. Perhaps it owes to my experience in Scope and in my undergraduate coursework prior to grad school, but I found it pretty easy to follow-along with the first few chapters—and I found the most of the interjections to be illuminating. (I especially liked his approach to the Black-Raven, White-Shoe issue in accounting inductive evidence—especially the version detailed late in the book when he discusses evidence). He was at his best when he dedicated his time to discussing narrower philosophical issues or the contributions of individual philosophers. The chapters on evidence, Popper, Kuhn, and the ensuing Lakatosh-Laudon-Feyerabend lightening round were some of the best in the book. Where things got less good (though not necessarily “bad”, for my view) is when he tried to cover entire <em>fields</em> in singular chapters. The Sociology of Science and Feminism chapters were among those aforementioned thrice-listens. I initially thought that it was because I was unfamiliar with the material, then I thought it was because I just wasn’t grokking it; but on the final time I realized that he was simply moving <em>way too fucking fast</em>. I sympathize with the challenge of distilling such large amounts of work into such a a condensed space—but considering he made <strong>two</strong> chapters out of Kuhn alone, it seems like a self-inflected wound with an obvious remedy: Split it out into a couple more chapters.</p>
<p>If history was Godfrey-Smith’s sole aim, the book could have been cut here. But that ultimately isn’t his full intention. The second aim of the book is to discuss the contemporary paradigms (or perhaps I should say “research traditions”) that dominated philosophy of science at the writing of his book—and they largely continue to hold sway today. The final aim is his advancing his own solutions to the core problems he identifies in the second part—though they all have roots in the discussions predominating the first. Throughout the book, he refers to these aims as “thirds” of the book—but, in reality, it’s more like history takes up the first 45% of the book before pivoting to</p>
<p>The chapter discussing naturalism more or less coincides with the transition into this pivot. Naturalism’s uptake comes nearer the end of the 20th century; but so do the other new agendas and perspectives that he focuses on. So he more or less abandons the chronological approach he took with the first section (though this doesn’t come as a surprise; he announces it as it happens). The chapters to come tackle “naturalistic” philosophies broadly, first on its own terms and then with regards to the “social structure of science;” It then pivots to “scientific realism”, a chapter on “explanation”, one on Bayesianism and evidence, and then one trying to harmonize the differences between empiricism, naturalism, and scientific realism. In this chapter, he retells the story of a reviewer warning that this final chapter has the potential to devolve into a “muddy paste.” As you might be able to guess from my use of the phrase earlier, it’s a critique that I largely agree with.</p>
<p>But the thing about paste, muddy or otherwise, is that it’s still pretty sticky. So while the concepts tended to blur together here<sup>3</sup>, the chapters does a pretty good job at having you stick around. This was some of the most engrossing material in the book, and I found my head moving quite vigorously at different parts of the book. It was mostly vertical when talking about how the aim of science is to use different “representational vehicles” (some linguistic, some mathematical, some visual, some computationally simulated, etc.) to provide an accurate representation of phen omena and relations observed in the real world—and when defending the broader tendency of science to invoke heretofore unobservable structures as part of a broader aim to explain what happens in the world. It did shake in the other direction when discussing Bayesianism because, at times, the approach appeared too glib and dismissive (such as the odd treatment of “Dutch books” and the thin objection to it on the grounds that some people may be averse to gambling)<sup>4</sup>. And I definitely found myself agreeing with the general conclusion to the book: That science is both an individual exercise and a social one. That scientists do aim to model the real world and that it is possible (and indeed advisable) to conditionally accept inductive arguments that have survived repeated testing with risky procedures. But also that scientists are engaged in a foundationally social enterprise and that we can only best understand their work (and the philosophy of science as well) as being influenced (and at times, constrained) by these social forces.</p>
<hr>
<p>All in all, I think <em>Theory and Reality</em> accomplishes what it sets out to do, though with varying degrees of clarity and persuasiveness. What it does well, it does <em>very</em> well—and there are moments where it manages to do exactly that throughout the whole book. But those moments are more heavily concentrated in the first half and in the concluding segments of a few of the final chapters; these successes, and their asymmetric spread, also serves to more severely accentuate the places where it <em>doesn’t</em> do as well. Places where the positions either expressed or taken weren’t as clear. Places where it felt too rushed to do such a large chapter-topic justice.</p>
<p>But I believe that this book is well deserving of a read by those interested in the philosophy of science broadly. It is a good survey of many ideas in the field, it incorporates and takes seriously competing intellectual programs that don’t often get coverage in other locations (i.e., feminist epistemology and critiques of science), and offers persuasive accounts for what scientists do, how, and why. Indeed, when I finished the book my first main feeling was sadness. Not because it was bad (because it was quite good), not because it was over (because it’s hard for <em>any</em> philosophy book to be <strong>that</strong> good) but because, just this last year, Larry Dodd retired from his position at UF. I was sad because this would have been a perfect addition to the Scope syllabus had he still been teaching it. But it has inspired me to keep better track of books like these so that, maybe someday, I’ll also be able to offer interested folks a suite of books that track the evolution of knowledge (both what we know and <em>how we know</em>) over my own career. I think it speaks very highly of this work that I think it has the potential to assist in cementing in others the same love of philosophy, science, and philosophy of science that Scope did for me.</p>
<p>Though, if I ever get the chance, I promise that I’ll do my best to stay shy of 30-something pages<sup>5</sup>.</p>




<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>The age of the book may discourage some from picking it up. Honestly, though, I didn’t even know it was this old as I was reading it.. It honestly reads more like a book from the time of its release onto Audible (2017) than from nearly two decades prior. I’m not sure if that is a comment of Godfrey-Smith’s perspicaciousness as a writer (and his ability to distill arguments into their more “timeless” elements) or on the rate of change in the discussed fields. To take a page from his book—literally—it’s probably something in between.↩︎</p></li>
<li id="fn2"><p>Though I did at times wonder if he was taking this argument a bit too far and, consequently, sparring with its straw man. I think he has a fair critique when he observes that theories and frames can strongly influence what we see but that their strength is fundamentally constrained by a shared external reality.↩︎</p></li>
<li id="fn3"><p>I feel like a lot of the differences between contemporary empiricism, naturalism, and scientific realism tend to either be real but highly technical or largely imagined but wielded fiercely by invested practitioners. In either case, largely inconsequential for the lay reader.↩︎</p></li>
<li id="fn4"><p>For the curious, this could be articulated quite easily as someone merely having a larger degree of faith in the continuation of the status quo and in greater expressed uncertainties in alternatives to it.↩︎</p></li>
<li id="fn5"><p>I solemnly swear: 25 pages max.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{licari2022,
  author = {Peter Licari},
  title = {Book {Review:} {Theory} and {Reality}},
  date = {2022-11-07},
  url = {www.peterlicari.com/posts/theory-reality-book-review},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-licari2022" class="csl-entry quarto-appendix-citeas">
Peter Licari. 2022. <span>“Book Review: Theory and Reality.”</span>
November 7, 2022. <a href="https://www.peterlicari.com/posts/theory-reality-book-review">www.peterlicari.com/posts/theory-reality-book-review</a>.
</div></div></section></div> ]]></description>
  <category>review</category>
  <guid>www.peterlicari.com/posts/theory-reality-book-review/index.html</guid>
  <pubDate>Mon, 07 Nov 2022 05:00:00 GMT</pubDate>
  <media:content url="www.peterlicari.com/posts/theory-reality-book-review/images/book_cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Thoughts on the 2020 Election</title>
  <dc:creator>Peter Licari</dc:creator>
  <link>www.peterlicari.com/posts/thoughts-prior-2020-election/index.html</link>
  <description><![CDATA[ 



<p>I thought I would post my prediction for the election and a few thoughts regarding it more generally. I’ll be peppering in some maps that I’ve made to help illustrate my general thought process.</p>
<section id="when-can-we-expect-all-this-to-wrap-up" class="level1">
<h1>When can we expect all this to wrap-up?</h1>
<p>First and foremost, there’s a chance that we’ll know, with a reasonable degree of certainty, who the winner of the electoral college vote will be by about 9 PM. That chance goes up if we push the deadline ’till 1 AM. But there’s also a solid chance that we won’t know for a few days to a week. Honestly, I’m not comfortable betting on which I think will happen.</p>
<p>Just so we’re all on the same page: That doesn’t mean there’s a snowball’s chance in Hell that we’ll know the vote <em>totals</em> by the end of the night. We never actually know the totals for all of the states by the time election night bleeds into national political hangover day. Many states (like Alaska and California) are notoriously slow with counting their ballots–and the vast majority of other states spend a few days curing problematic ballots and/or allowing ballots post-marked prior to Election day to filter in. (Military votes are in a similar situation.) We won’t see validated totals for weeks after.</p>
<p>That’s how it is with <strong>every</strong> election. However, in normal times, we’ve gotten pretty good at using a combination of exit-polls and vote totals scraped from state/county election officials’ sites to <em>project</em> the eventual winner.</p>
<p>As you might have recognized, we are not in normal times.</p>
</section>
<section id="whats-the-hold-up." class="level1">
<h1>What’s the hold-up.</h1>
<p>In a word: Pennsylvania.</p>
<p>Through a combination of COVID-19 and general anxiety/enthusiasm catalyzed by the last four years of President Trump’s tenure, we saw mind-bogglingly high levels of early/mail-in voting. At least <strong>100 <em>million</em></strong> people voted early this year, according to estimates from <a href="https://twitter.com/ElectProject/status/1323663599697539074?s=20">Michael McDonald’s US Elections Project</a>. That translates to 73% of the nation’s 2016 vote total. Some states surpassed their 2016 totals.</p>
<p>However, not all states have laws that allow them to tabulate early ballots as they come in. This map from Pew Research shows which states tabulate the votes as they come in.</p>
<center>
<p><img src="www.peterlicari.com/posts/thoughts-prior-2020-election/images/AbsenteeBallots.png" class="img-fluid" style="width:50.0%"></p>
</center>
<p>The state throwing the biggest monkey-wrench into the works is undoubtedly Pennsylvania. For reasons that I’ll get to in a second, Pennsylvania is critical to President Trump’s pathway to victory. Without it, he has very little chance of making it into office. Complicating things more is that Pennsylvania counts day-of votes <em>first</em> before the early vote. It could take days before the early vote totals are cleared. And given that Joe Biden appears to be leading quite dramatically among early voters, <a href="https://twitter.com/Politics_Polls/status/1320698523030032384?s=20">according to the polls</a>, there is a solid chance that President Trump will appear to be leading in the state by the end of the night. If Joe Biden is winning PA by sunrise tomorrow—barring any irregularities in the day-of counting or insanely long lines—then he’s most likely won the election. (Even with the curse of daylight savings pushing daybreak an hour earlier.)</p>
</section>
<section id="how-do-i-see-the-election-turning-out" class="level1">
<h1>How Do I See the Election Turning Out?</h1>
<p>Here is what I see as the most likely outcome when everything is said and done. (From here on out, I’ll largely be using maps I’ve generated <em>via</em> <a href="https://www.270towin.com/">270 to Win</a>.)</p>
<center>
<p><img src="www.peterlicari.com/posts/thoughts-prior-2020-election/images/likelyoutcome.png" class="img-fluid"></p>
</center>
<p>I should caution that by “most likely”, I mean that I think this has somewhere between a 20-30% chance of it happening. There’s a better chance than not that I’m gonna be wrong—so don’t set your clock to it.</p>
<p>(Another daylight savings joke. I’m still not over it. Now that I’m a father to a newborn, I can’t even begin to fathom how <em>my</em> parents managed this BS.)</p>
<p>Many of these states are seen as toss-ups: Texas, Florida, North Carolina, Georgia, and Arizona. I settled on the answers that I did largely by taking these states, case-by-case, and thinking about how they performed over the last few elections, including 2018 and 2016, and their current political momentum. Here’s an abbreviated look at my rationale:</p>
<ul>
<li><strong>Arizona:</strong> Long-term trend towards purple, favoring Red; generally unfavorable to Trump and Trumpism in particular; 2018 strong showing for Democrats + strong polling.</li>
<li><strong>Florida:</strong> Purple for a long time; recent history of Blue on Presidential races; super tight midterm.</li>
<li><strong>Georgia:</strong> Solid red in Presidential contests; maintained Red in midterms; getting closer but still a red state in the south.</li>
<li><strong>Iowa:</strong> Swingy the last couple decades, but a consistent polling lead for Trump.</li>
<li><strong>Maine-2:</strong> Generally weak right as is; fairly large disdain for Trumpism; consistent Biden Lead (albeit small).</li>
<li><strong>Nebraska-2:</strong> Consistent polling lead for Biden.</li>
<li><strong>North Carolina:</strong> Swingy; solid 2018 performance; consistent advantage for Biden in Polling</li>
<li><strong>Ohio:</strong> The supposed king-maker. Consistent Trump advantage in the polling; solid Republican performance in 2018.</li>
<li><strong>Texas:</strong> Gradual demographic transition to purple accelerated by Trump. It’d be bat-💩 crazy if it went from stalwart Red to true purple within a single cycle.</li>
</ul>
<section id="which-states-im-most-likely-to-be-wrong-about." class="level2">
<h2 class="anchored" data-anchor-id="which-states-im-most-likely-to-be-wrong-about.">Which states I’m most likely to be wrong about.</h2>
<p>The states I’m most likely to get wrong are probably Georgia, North Carolina, Florida, and Maine-2. I think Maine-2 will be a decent indicator of how well the GOP’s senate chances will fair though; if that goes Blue, Collins is probably toast and any hopes that incumbents will be insulated from down-ballot effects stemming from Trump most likely go out the window. I’m less bullish on the senate flipping than others, but that will be a fair indicator of a bad night for the GOP all around.</p>
</section>
</section>
<section id="biden-pathways-to-victory" class="level1">
<h1>Biden Pathways to victory</h1>
<section id="biden-has-a-strong-wall" class="level2">
<h2 class="anchored" data-anchor-id="biden-has-a-strong-wall">Biden has a strong wall</h2>
<p>The reason I’m as bullish as I am for Biden (besides the appeal of the alliteration) is that the current toss-ups can literally <strong>all</strong> break for President Trump and Biden would <em>still</em> win—provided there aren’t any major surprises in the polling.</p>
<center>
<p><img src="www.peterlicari.com/posts/thoughts-prior-2020-election/images/trumpwinsall.PNG" class="img-fluid"></p>
</center>
<p>Not all of these states are equal with regards to the President’s chances. No state’s return is independent of the others—if Biden won Texas, that means we’re looking at a <em>bona fide</em> blue malestrom, let alone a wave—but some states give more information about how other states are going to break than others. <a href="https://projects.fivethirtyeight.com/trump-biden-election-map/">FiveThirtyEight has a tool</a> that uses the correlations among polling errors to show how a victory in some states ripples out to signal what’s happening in others. A Trump win in Georgia doesn’t shift things much, nor does one in Texas, because frankly it’s a shock that they’re even in play. A win in Florida, however, drastically lowers Biden’s chances and suggests a map that looks like the one above. However, even in that case, the President is still <strong><em>not</em></strong> favored to win if only for the fact that Biden is still leading in the Electoral college.</p>
<section id="the-upshot-however-is-that-if-trump-loses-any-of-those-states-his-only-path-to-victory-lies-in-there-being-large-unprecedented-degrees-of-polling-error." class="level4">
<h4 class="anchored" data-anchor-id="the-upshot-however-is-that-if-trump-loses-any-of-those-states-his-only-path-to-victory-lies-in-there-being-large-unprecedented-degrees-of-polling-error.">The upshot however is that if Trump <em>loses</em> any of those states, his only path to victory lies in there being large, unprecedented degrees of polling error.</h4>
<p>I know, I know. Some of you might be thinking: <em>“But Peter! The polls in 2016…”</em> to which I will reply (for what I pray to all that is good and holy is the <strong>last time</strong>) that even the state level polls did <a href="https://fivethirtyeight.com/features/the-polls-are-all-right/">reasonably well in 2016</a> in the aggregate—and more pollsters have been doing more <em>high quality</em> state-level polls than last time. There have also been adjustments across the industry to account for the biggest systematic source of polling error in 2016, which was not properly accounting for Trump’s support among White, non-college educated voters.</p>
</section>
</section>
<section id="bidens-best-cases" class="level2">
<h2 class="anchored" data-anchor-id="bidens-best-cases">Biden’s best case(s)</h2>
<p>The best case scenario for Biden is that he picks-up all of the toss-ups. But I should really emphasize that <strong>I don’t think this is a particularly likely outcome.</strong></p>
<center>
<p><img src="www.peterlicari.com/posts/thoughts-prior-2020-election/images/bidenlandslide.PNG" class="img-fluid"></p>
</center>
<p>A more realistic “great day” scenario for Biden is that he wins picks up Florida, North Carolina, Arizona, and Georgia while Trump gets Texas, Ohio, and Iowa.</p>
<center>
<p><img src="www.peterlicari.com/posts/thoughts-prior-2020-election/images/bidenmorelikely.PNG" class="img-fluid"></p>
</center>
<p>Judging from the correlations in polling errors, Florida will be a good (but not perfect) indicator of how Georgia and North Carolina go. (Georgia could be called first but that doesn’t necessarily mean that Florida will go with it; the leverage one state has over another is asymmetric. For example: North Carolina going red/blue means less for Texas’ eventual outcome than Texas going red/blue means for North Carolina.) Ohio will probably provide a good (but, again, <em>not perfect</em>) indication for how the other three states will break.</p>
</section>
</section>
<section id="trump-pathways-to-victory" class="level1">
<h1>Trump Pathways to victory</h1>
<section id="without-pennsylvania" class="level2">
<h2 class="anchored" data-anchor-id="without-pennsylvania">Without Pennsylvania</h2>
<p>Just because I expect the President to lose doesn’t mean I think his loss is <em>inevitable.</em> But it’s tough. Really tough. And it’s made all the tougher because he’s currently not favored in Pennsylvania. And by “not favored in Pennsylvania” I mean that <a href="https://projects.economist.com/us-2020-forecast/president/pennsylvania"><em>The Economist</em> is giving Biden a 95% chance of carrying the state</a>. Trump will have to outperform the polls by a strong margin to carry the day. The most likely states, given the margin of error for the most recent state level polls, is Nevada, New Hampshire, Maine-2 and Nebraska-2. That will give Trump 270 votes in the Electoral College.</p>
<center>
<p><img src="www.peterlicari.com/posts/thoughts-prior-2020-election/images/trumpnopa.PNG" class="img-fluid"></p>
</center>
<p>But I want to stress how unlikely that is. Many of these wins are not all that correlated with each other—meaning that a win in any of them early on doesn’t necessarily portend a Biden defeat. (Other state combinations are also possible, but we’d be talking about even <em>less</em> likely polling errors.)</p>
</section>
<section id="with-pennsylvania" class="level2">
<h2 class="anchored" data-anchor-id="with-pennsylvania">With Pennsylvania</h2>
<p>A trump victory in Pennsylvania <em>dramatically</em> improves the President’s chances. If the President wins there, it’s likely that he’s winning in a lot of other places that he’s currently not favored. However,it should be noted that <em>even then</em> he’d still need to pick up every one of the toss-up states. That can be helped by the fact that winning Pennsylvania would suggest a large degree of errors in the polls. But that degree of error is, I have to emphasize, really improbable. This outcome isn’t necessarily <em>less</em> likely than the one above, but pulling-off Pennsylvania would be an incredible upset. And, honestly, I would probably need to seriously reevaluate my life choices should it happen: especially my chosen profession.</p>
<center>
<p><img src="www.peterlicari.com/posts/thoughts-prior-2020-election/images/trumpwithpa.PNG" class="img-fluid"></p>
</center>
<p>The other point to consider when weighing out the importance of Pennsylvania is just how <strong>long</strong> that would make the contest. Basically, if Trump wins every toss-up state, then we’re not going to know the election’s outcome until about the end of the week <em>at earliest.</em> Because, as mentioned above, <em>Pennsylvania counts their early votes last and haven’t started counting them at all.</em> If Trump is ahead by the end of the night, we’ll just have to wait and see if the Biden advantage banked-up from early voting is enough. (Although, as a Floridian, I must confess that it’ll be nice to have all of the attention away from us for once.)</p>
<section id="in-short-in-order-for-the-president-to-win-hes-going-to-have-to-pull-off-one-helluva-upset.-that-doesnt-make-it-impossible-upsets-happen-all-the-time-but-by-definition-it-makes-it-unlikely." class="level4">
<h4 class="anchored" data-anchor-id="in-short-in-order-for-the-president-to-win-hes-going-to-have-to-pull-off-one-helluva-upset.-that-doesnt-make-it-impossible-upsets-happen-all-the-time-but-by-definition-it-makes-it-unlikely.">In short, in order for the President to win, he’s going to have to pull-off one helluva upset. That doesn’t make it impossible (upsets happen all the time) but, by definition, it makes it <em>unlikely.</em></h4>
</section>
</section>
</section>
<section id="cool.-but-what-if-trump-doesnt-leave" class="level1">
<h1>Cool. But what if Trump doesn’t leave?</h1>
<p>I can understand the concern some have that Trump won’t leave given that, for the first time in American history, a President has repeatedly refused to commit to a peaceful transition of power. If he refuses to concede the election, we’ll be in an unprecedented situation in our country. (And, yes, I’m including <a href="https://en.wikipedia.org/wiki/1876_United_States_presidential_election">1876</a> because there wasn’t an incumbent involved with that colossal cluster f*ck.)</p>
<p>However, being unprecedented here at home doesn’t mean unprecedented abroad. The last few decades are unfortunately replete with examples of democratic states backsliding into either competitive or outright authoritarianism. And there are lessons to be learned there. Namely, a Trump coup is unlikely to be fruitful if he doesn’t have the support of key power brokers in the Government as well as in the Military. And I frankly don’t think Trump has that support.</p>
<p>When it comes to Congressional Republicans, while they certainly have acquiesced to large expanses in executive power—and excused a number of insane controversies—they have, to their credit, largely rebuked the President when he made suggestions that are unequivocally undemocratic (such as moving election day or not peacefully conceding an electoral loss.) McConnell’s support of the President seems to extend only as far as the latter been able to reliably install conservative judges into the federal judiciary. I’m <strong>not</strong> saying that we should sleep on the possibility that McConnell and the rest turn out to be entirely without scruples and little-d democratic principles. But I <strong>am</strong> saying that we shouldn’t necessarily buy-in to the idea that they’ll do such open, incontrovertibly authoritarian moves.</p>
<p>Additionally, Trump would need the support of the Military. Looking at how they responded to his attempts to deploy troops during the height of the protests earlier this year, I feel more confident saying that he doesn’t have it. <a href="https://www.nbcnews.com/politics/2020-election/more-200-retired-generals-admirals-endorse-biden-including-some-who-n1240842">Additionally, 200 retired generals, including a few who served under Trump, endorsed Biden.</a> I’m not saying that this means the entire current membership of the higher brass does, too—but Trump’s support would need to be far more consolidated than it appears to be.</p>
<p>I think it’s quite likely that Trump will be a petulant child up until Joe Biden is sworn in. It would be, without a doubt, the most bonkers lame-duck period in modern American history. But I think that, if he loses the election, there’s a far better chance that he leaves than him fighting to stay.</p>
<p>(A more likely issue was/is Trump stealing the election. However, a number of important lower and Supreme Court decisions over the last few weeks—even those posed to conservative justices—have largely come back against the GOP plaintiffs. The President has been open about his hopes that the election will be close so that they can be litigated in the courts. But there seems to be a better chance that it’s not close enough for them to entertain all of the challenges he and his team have cooked up.)</p>
</section>
<section id="so-does-a-biden-win-mean-that-american-democracy-is-safe" class="level1">
<h1>So does a Biden win mean that American democracy is safe?</h1>
<p><em>ahahhahahahahhahahhahhahhaha</em></p>
<p>Oh.</p>
<p>Were you serious?</p>
<p><strong><em>ahahhahahahahahahahahahahahaah * laughs start breaking down into sobs *</em></strong></p>
<p>I think American democracy is in peril. I don’t think that’s necessarily a controversial position among those who study democratic regimes and how they degrade. But I don’t think that Joe Biden is going to single-handidly (or even jointly, with Kamala Harris and/or a unified Democratic government) save the country.</p>
<p>I’ll probably write (or record) more about this later so I won’t give it all away now: But we’re going to need to see governmental reforms the likes of which we haven’t seen since the post-Watergate Congress. We’re going to need that <em>and</em> a major overhaul in our media environment <em>and</em> strengthening of our critical institutions <strong>and</strong> a lot of elite coordination and cooperation across both sides of the political spectrum <strong><em>and</em></strong> a public shift in what conduct we do and don’t condone, see as civil and uncivil, as acceptable and unacceptable. None of it has to be resolved day one, or even within Biden’s tenure, but we need to make serious progress in these areas. There is no other option. Because our political momentum, in this current moment, does not bode well; our trajectory follows a well-worn path into authoritarianism and there are dispiriting few junctures remaining to veer off of it.</p>
<p>I don’t think it’s impossible. I am ever the optimist—if only for my own sanity. But the work has only just begun. And it must be done even if I’m wrong and Biden loses.</p>
<p>If I’m being honest, <em>especially</em> then.</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{licari2020,
  author = {Peter Licari},
  title = {Thoughts on the 2020 {Election}},
  date = {2020-11-05},
  url = {www.peterlicari.com/posts/thoughts-prior-2020-election},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-licari2020" class="csl-entry quarto-appendix-citeas">
Peter Licari. 2020. <span>“Thoughts on the 2020 Election.”</span>
November 5, 2020. <a href="https://www.peterlicari.com/posts/thoughts-prior-2020-election">www.peterlicari.com/posts/thoughts-prior-2020-election</a>.
</div></div></section></div> ]]></description>
  <category>elections</category>
  <category>reflection</category>
  <guid>www.peterlicari.com/posts/thoughts-prior-2020-election/index.html</guid>
  <pubDate>Thu, 05 Nov 2020 05:00:00 GMT</pubDate>
  <media:content url="www.peterlicari.com/posts/thoughts-prior-2020-election/images/likelyoutcome.png" medium="image" type="image/png" height="94" width="144"/>
</item>
<item>
  <title>How to Do Unequal Randomization in Qualtrics Surveys</title>
  <dc:creator>Peter Licari</dc:creator>
  <link>www.peterlicari.com/posts/Qualtrics-random-groups/index.html</link>
  <description><![CDATA[ 



<p>Recently, some coauthors and I were working on a survey experiment in Qualtrics where we were assigning people into 4 different groups. This is something that Qualtrics can do really easily with its in-built <a href="https://www.qualtrics.com/support/survey-platform/survey-module/survey-flow/standard-elements/randomizer/">randomizer</a> function. If you use this, and keep <a href="https://www.qualtrics.com/support/survey-platform/survey-module/survey-flow/standard-elements/randomizer/#EvenlyPresentElements">evenly present elements</a> on, your respondents will be sorted in roughly evenly. So if you have 16 respondents and 4 groups, on average you’ll get 4 people per group.</p>
<center>
<img src="www.peterlicari.com/posts/Qualtrics-random-groups/images/1.png" class="img-fluid">
</center>
<p>But we had a different situation. We had four groups but we <strong>didn’t</strong> want it split evenly. We wanted it so that group 1 was half of the survey, and groups 2, 3, and 4 took up thirds of the remaining half.</p>
<center>
<img src="www.peterlicari.com/posts/Qualtrics-random-groups/images/2.png" class="img-fluid">
</center>
<p>Unfortunately, Qualtrics doesn’t seem to have an option that let’s you select unequal probabilities natively. If you deselect “evenly present elements” it’ll just randomize without any real concern towards whether your groups end up looking roughly equal. But that’s not what we needed. So I wanted to write about our solution to this so, hopefully, others in a similar situation might be able to find a work-around that works for them, too!</p>
<p>Our solution used <strong>embedded data</strong>, <strong>then branches</strong>, and the standard <strong>randomizer.</strong> I’ll also talk about how you might be able to generalize this to any number of conditions (although some are more work than others).</p>
<section id="starting-with-embedded-data" class="level2">
<h2 class="anchored" data-anchor-id="starting-with-embedded-data">Starting with Embedded Data</h2>
<p>As you probably know: After you’re done with your Qualtrics survey, you can export it as a csv or as a xlsx file. In addition to the answers to your questions, it’ll also include some project and respondent metadata. But you can also program the survey for it to include you’re own custom metadata to be embedded in the project. You can do this by clicking on the “add new element here” button and adding embedded data to the project.</p>
<center>
<img src="www.peterlicari.com/posts/Qualtrics-random-groups/images/3.PNG" class="img-fluid">
</center>
<p>Once you’ve done that, you can customize your field to have whatever name you want. You can also set the value for this field. Here I set a variable named “test” equal to the value “1”. When I export the results for this survey, there will be a new column called “test” where the value for every respondent will be 1.</p>
<p><img src="www.peterlicari.com/posts/Qualtrics-random-groups/images/4.PNG" class="img-fluid"> Importantly, though, you can also set multiple conditions for the embedded data field! You do this by clicking “add below” and adding more embedded data sections.</p>
<p><img src="www.peterlicari.com/posts/Qualtrics-random-groups/images/5.PNG" class="img-fluid"></p>
<p><strong>Pop quiz! What would you get in the “test” column if you ran this survey as is?</strong></p>
<p>You’d get <strong>4</strong> because, right now, you’re telling Qualtrics:</p>
<ul>
<li>Invent a column called test. Set it equal to 1.</li>
<li>Actually, remember test? Set it to 2.</li>
<li>I lied. Make it 3 now.</li>
<li>Jk. 4.</li>
</ul>
<p>Here’s where we start using the randomizer.</p>
</section>
<section id="omg-so-random" class="level2">
<h2 class="anchored" data-anchor-id="omg-so-random">“OMG so random…”</h2>
<p>As it stands now, you’re going to end up with a field called test where the value is set to 3 for all respondents. Instead of that, we can use the randomizer to make it so that 1/4 of the sample has a value of 1 for test, 1/4 has a value of 2, 1/4 has a value of 3, and 1/4 has a value of 4.</p>
<p><img src="www.peterlicari.com/posts/Qualtrics-random-groups/images/6.PNG" class="img-fluid"> You may be thinking “Cool. But this doesn’t do anything for me. I’m right back at equal probabilities for my experimental conditions.” And you’d be right if we were stopping here.</p>
<p>But we’re not stopping here.</p>
<section id="were-going-to-nest-randomization-conditions." class="level4">
<h4 class="anchored" data-anchor-id="were-going-to-nest-randomization-conditions.">We’re going to <em>nest</em> randomization conditions.</h4>
<p><img src="www.peterlicari.com/posts/Qualtrics-random-groups/images/7.PNG" class="img-fluid"></p>
<p>This programming is pretty similar to what we ended up using. Let’s follow the logic of the flow:</p>
<ol type="1">
<li>Randomly pick either the test 1 condition with 50 % probability.</li>
<li>If it is not picked, then randomly select one of the remaining 3 conditions with 1/3 probability each.</li>
</ol>
<p>This will mean that half of the respondents will get test1 and 1/6th will go to each test2, test3, and test4. Which is what the situation is in the second image and exactly what we were looking for in the real-life scenario.</p>
<p>This nesting is the key thing here. <strong>By nesting your randomizers strategically, there are few combinations that you won’t be able to achieve.</strong> This sort of set up can be really useful if you’re doing a multifactorial survey experiment.</p>
<p>We can wrap this all up with a neat bow through some branching.</p>
</section>
</section>
<section id="branch-it-out" class="level2">
<h2 class="anchored" data-anchor-id="branch-it-out">Branch it out</h2>
<p>Now we can do some branches so that our participants only see the blocks that they’re intended to see. Then branches work off of <a href="https://en.wikipedia.org/wiki/Boolean_algebra">boolean logic</a>. If a condition is <code>TRUE</code> then it’ll run a particular course of action. If it’s <code>FALSE</code> then it won’t run that action. In Qualtrics, you can set the branching logic so that it reflects the metadata that was assigned to participants through the randomizer.</p>
<p><img src="www.peterlicari.com/posts/Qualtrics-random-groups/images/8.PNG" class="img-fluid"> After that, you can add the block that you wanted people with test condition 1 (and only test condition 1) to see. And if you repeat it out, then you can complete the whole survey flow. Here’s basically what our survey looked like once the logic is completed all the way to the end.</p>
<p><img src="www.peterlicari.com/posts/Qualtrics-random-groups/images/9.PNG" class="img-fluid"></p>
<p>One of the things I really like about this approach (rather than, say, using a <a href="https://www.qualtrics.com/support/survey-platform/common-use-cases-rc/assigning-randomized-ids-to-respondents/">random number generator</a> and a bunch of then branches) is that this makes your later analysis pretty easy. If you’re making pivot tables, you can group off of that variable’s value. If you’re doing ANOVA in SPSS, Stata, or R, you’ve got a single variable already to go without having to do any post-hoc coding. It also makes it easier to set dummy variables if you do a more advanced regression analysis. I’m personally a big fan of doing small-to-moderate amounts of work up-front to save myself larger amounts of work down the road. I’m a big believer that work borrowed from your future self compounds with interest.</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{licari2020,
  author = {Peter Licari},
  title = {How to {Do} {Unequal} {Randomization} in {Qualtrics}
    {Surveys}},
  date = {2020-08-05},
  url = {www.peterlicari.com/posts/Qualtrics-random-groups},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-licari2020" class="csl-entry quarto-appendix-citeas">
Peter Licari. 2020. <span>“How to Do Unequal Randomization in Qualtrics
Surveys.”</span> August 5, 2020. <a href="https://www.peterlicari.com/posts/Qualtrics-random-groups">www.peterlicari.com/posts/Qualtrics-random-groups</a>.
</div></div></section></div> ]]></description>
  <category>surveys</category>
  <category>qualtrics</category>
  <category>research design</category>
  <guid>www.peterlicari.com/posts/Qualtrics-random-groups/index.html</guid>
  <pubDate>Wed, 05 Aug 2020 04:00:00 GMT</pubDate>
  <media:content url="www.peterlicari.com/posts/Qualtrics-random-groups/images/2.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Surveying is a Beautifully Foolish Endeavor</title>
  <dc:creator>Peter Licari</dc:creator>
  <link>www.peterlicari.com/posts/surveying-beautiful-endeavor/index.html</link>
  <description><![CDATA[ 



<p>I binged Hank Green’s <a href="https://www.amazon.com/Beautifully-Foolish-Endeavor-Novel-Carls/dp/152474347X"><em>A Beautifully Foolish Endeavor</em></a> yesterday and it is, let me tell you, just fantastic. I don’t plan on writing a longer review because I didn’t really write any notes. I didn’t <em>want</em> to take notes. Not because it was bad, but because I didn’t want to peel my eyes away from the page for the short seconds it’d take for me to grab my pen and notebook. I was too engrossed to want to do anything but live in its pages for however long it’d let me. So, no review—but maybe that ardor could stand in place of one.</p>
<p>But aside from just being human, well-written, and the right mix of cynical and optimistic, it is also just an eminently and endlessly quotable book. There are quotes here that I plan on using when I talk about machine learning in my upcoming data science class. Quotes that just stabbed me in the chest with self-recognition (<em>cough cough</em> Miranda being a workaholic <em>cough cough</em>). And then there are quotes that make me feel that Green is one of the few science fiction authors who actually understand the sociology and psychology of being a practicing scientist (which, ya know, <em>SciShow</em> and his M.S.—so it makes sense). But then there’s this quote near the end of the book that so perfectly described being a survey researcher that it made me laugh out loud:</p>
<blockquote class="blockquote">
<p><strong>[We wanted to] dive deep into our survey responses. Except there were just too many…no matter how we filtered, there just wasn’t a good way.</strong></p>
<p><strong>April and I were griping about this around the black marble countertop in the kitchen when Carl came in and overheard us.</strong></p>
<p><strong>“Just do a search,” Carl said.</strong></p>
<p><strong>“The searches take forever and we don’t know what to search for,” April replied. “It’s just a bunch of dumb data. Most of the useful stuff is in text responses, which is impossible to parse.”</strong></p>
</blockquote>
<p>I loved and loathed the reductionism of “dumb data”—mostly because it’s right. Until we data geeks make the decisions on what to model, how to model it, and how to frame and embed our results into a digestable narrative, it is literally just that. Dumb data, (sometimes) intelligently collected. And also, it’s so, <strong>so</strong> spot-on to note that almost all of the really juicy stuff is in the open-ended responses where people just let you know what’s <em>actually</em> going on. Or at least their inwardly-biased interpretation of their messy cognitive processes—<strong>which is still super cool and really interesting!</strong></p>
<p>As an example: for my dissertation, I had completely written-off games like <em>Hearts</em> as sociopolitically unimportant until some respondent mentioned that there are online lobbies where people use the game to chat about politics. I never would’ve learned that if I didn’t bother to read what my respondents had taken the time to write. And there have been a few papers that make the point that we should really pay more attention to the nuance that people write in rather than (often incorrectly) discretizing them on the basis of hardline, <em>ex ante</em> coding rules.</p>
<p>I’m envious that April and Maya had an alien superintelligence to parse through all of that data and get to all the juicy bits. Sure we have NLP and algorithims for market segmentation—but do <em>they</em> come from a near-omniscient monkey? Didn’t think so.</p>



<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{licari2020,
  author = {Peter Licari},
  title = {Surveying Is a {Beautifully} {Foolish} {Endeavor}},
  date = {2020-08-03},
  url = {www.peterlicari.com/posts/surveying-beautiful-endeavor},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-licari2020" class="csl-entry quarto-appendix-citeas">
Peter Licari. 2020. <span>“Surveying Is a Beautifully Foolish
Endeavor.”</span> August 3, 2020. <a href="https://www.peterlicari.com/posts/surveying-beautiful-endeavor">www.peterlicari.com/posts/surveying-beautiful-endeavor</a>.
</div></div></section></div> ]]></description>
  <category>review</category>
  <category>surveys</category>
  <category>fiction</category>
  <guid>www.peterlicari.com/posts/surveying-beautiful-endeavor/index.html</guid>
  <pubDate>Mon, 03 Aug 2020 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Capturing a PowerPoint/Google Slides Lecture with Open Source Software</title>
  <dc:creator>Peter Licari</dc:creator>
  <link>www.peterlicari.com/posts/covid-video-lecture-tutorial/index.html</link>
  <description><![CDATA[ 



<p>A number of schools are either <a href="https://www.nytimes.com/2020/03/08/us/coronavirus-schools-san-francisco-seattle.html">shutting down</a> or <a href="https://www.washingtonpost.com/education/2020/03/09/princeton-requires-lectures-seminars-go-online-only-temporary-move-amid-covid-19-outbreak/">transitioning classes to an online format</a> due to the novel corona virus (also known as COVID-19). (UF just let us know Yesterday that, while it isn’t yet mandatory, <a href="https://www.wcjb.com/content/news/UF-Students-return-to-campus-after-Spring-Break-amidst-coronavirus-fears-568639131.html">we should start transitioning sooner rather than later</a>). This isn’t going to be an easy transition for a lot of us—students and faculty alike. Not everyone makes living on the Internet basically a second job. I’m planning on writing a workflow for my intended solution—hosting lectures live in a Discord server with password-protected Google Forms as attendance—in the next few days. But I know that many people are going to feel that simpler is better for them. I got this text from a good friend of mine yesterday as we were talking about it:</p>
<blockquote class="blockquote">
<p>Can I just like…screen capture my computer while I’m presenting and just upload that?</p>
</blockquote>
<p><em>Absolutely!</em> And it’s easy to do with some Open Source software. In fact, <strong>you can do it with whatever your presentation software of choice (PowerPoint, Google Slides, LibreOffice, Beamer, etc.).</strong> This is especially helpful because, while PowerPoint offers an easy recording option, the same can’t be said for everything. So, for this post, I’m going to walk y’all through how to use OBS to record yourself giving a PowerPoint presentation so you can upload it to your students.</p>
<section id="contents" class="level1">
<h1><strong><em>Contents</em></strong></h1>
<ul>
<li><p>OBS (What it is and How to Install it)</p></li>
<li><p>Setting up OBS</p>
<ul>
<li>Managing your export settings.</li>
<li>Capturing a PowerPoint Presentation</li>
<li>Capturing your Audio Voice Over</li>
<li>Recording your Presentation</li>
</ul></li>
<li><p>Recording your Lecture</p></li>
<li><p>Tips for your Presentation</p></li>
</ul>
<p><br></p>
<p>##<a name="anchor1"></a> OBS (What it is and How to Install it)</p>
<section id="what-is-obs" class="level3">
<h3 class="anchored" data-anchor-id="what-is-obs">What is OBS?</h3>
<p><strong>O</strong>pen <strong>B</strong>roadcaster <strong>S</strong>oftware (OBS) is a video recording and streaming platform released by the <a href="https://obsproject.com/">OBS Project</a>. Its main software platform, OBS Studio, is incredibly popular among video game players and streamers on Twitch and YouTube. It has a number of bells and whistles that makes it really well-suited for these creators. But, most importantly for our purposes, it allows you to capture a program running on your computer, mix in audio, and export that into a file that you can easily upload to your file/video-hosting site of choice. <br></p>
</section>
<section id="how-to-install-it" class="level3">
<h3 class="anchored" data-anchor-id="how-to-install-it">How to Install it</h3>
<p>First, go to the <a href="https://obsproject.com/">OBS Project</a> website. Right there on the front of the screen, you should see three links that lead to downloads based off of your computer’s operating software. (You are going to need about 250 MB of free space in order to install it). Click on whichever link matches your system. Once you do that, it should begin downloading your software automatically. From there, install it as you would anything else. (Personally, I recommend just keeping everything at the default installation settings).</p>
<p align="center">
</p><p><img src="www.peterlicari.com/posts/covid-video-lecture-tutorial/images/1.gif" style="width:75.0%;height:75.0%"></p>
<p></p>
<p><br></p>
<p>##<a name="anchor2"></a>Setting Up OBS</p>
<p>Once you’ve installed OBS Studio, go ahead and open it like you would a normal program. (If you kept the box checked that read “Open after installation” while you were installing it, the program should do that for you automatically). You should see a screen that looks something like this:</p>
<p align="center">
</p><p><img src="www.peterlicari.com/posts/covid-video-lecture-tutorial/images/2.PNG" style="width:75.0%;height:75.0%"></p>
<p></p>
<p><br></p>
<p><a name="anchor3"></a>First thing you’re going to want to do is decide how and where you’re going to export your screen capture. For Windows 10 (my operating system), OBS defaults to using an .mkv recording format and plopping the output into your “videos” folder. That file location may or may not work for you—I’m going to tell you how to change it if doesn’t—but you’re definitely going to need to change the recording format to mp4 (which is more universally accepted on video sharing platforms than mkv).</p>
<p>Look down in the lower right-hand corner and click the <code>Settings</code> button. A new screen should pop up. Look at the left-hand pane and click <code>Output</code>. Go down to the drop-down menu for <code>Recording Format</code> and change it from <code>mkv</code> to <code>mp4</code>. If you want to change where the video will end up on your computer, click on the <code>Browse</code> button that’s in-line with <code>Recording Path</code>. Then just navigate to the file location that you want to export the file to. I’m going to put it where I put the other media I’m using for this blogpost. You can put it wherever you want. (Or, if you’re cool with it exporting to your default videos folder, you don’t have to mess with it at all). <strong>Make sure you hit the <code>Apply</code> button before either clicking <code>OK</code> or exiting the screen.</strong> Otherwise, your settings won’t have saved.<sup>1</sup></p>
<p align="center">
</p><p><img src="www.peterlicari.com/posts/covid-video-lecture-tutorial/images/3.gif" style="width:75.0%;height:75.0%"></p>
<p></p>
<p><br></p>
<p><a name="anchor4"></a>Now let’s go ahead and get it capturing a PowerPoint presentation. Open up PowerPoint or your presentation platform of choice. I’m going to be using a <a href="www.libreoffice.org">LibreOffice</a> version of my latest lecture from the Political Behavior class I’m teaching right now. It was originally made in Google Slides, so apologies if it looks a little wonky.</p>
<p align="center">
</p><p><img src="www.peterlicari.com/posts/covid-video-lecture-tutorial/images/4.PNG" style="width:75.0%;height:75.0%"></p>
<p></p>
<p>Now that your presentation is open, go back to OBS. Go down to the lower left-hand panel named <code>Sources</code>. Click on the <code>+</code> icon. Start at the top and scroll down to where it says <code>Display Capture</code>. A new window will pop open titled something like “Create/Select Source.” Click <code>OK</code>. The screen should start showing a live view of your computer display. If you use multiple screens, you can go down to <code>Display</code> to set which one you’d like to record. If you have one screen (or, equivalently, if you set your display to be the same screen that OBS is sitting in), you’ll get a pretty trippy look into infinite recursion.<sup>2</sup> <em>Don’t worry. The infinite loop will not be visible during your presentation.</em></p>
<p>Click OK to finish setting up your visual source. (You can click the eye icon in the sources panel to kill the visual feed if you don’t want to look at the recursion while you set everything else up. I’ll do that so you know how and so it won’t be a distraction.) OBS will capture anything that you have on this display. So if you want to capture a Google Slides (or Beamer presentation), simply put your browser window (pdf viewer) on that screen and OBS will capture that. This process allows you to use whatever presentation software you want. If you’re teaching programming or some kind of quantitative methods class, you can even have it display R/Stata/SPSS!<sup>3</sup></p>
<p align="center">
</p><p><img src="www.peterlicari.com/posts/covid-video-lecture-tutorial/images/5.gif" style="width:75.0%;height:75.0%"></p>
<p></p>
<p><br></p>
<p><a name="anchor5"></a>Next, we’ll set up your voice-over (that way your students aren’t just watching slides silently slipping by). You have a few options here. Most laptops (and some PCs) have built in microphones. While these aren’t the highest quality, they should do in a pinch. If you have a headset that you use to make Skype calls and the like, that can work as well. Thanks to my YouTubing, I happen to have a <a href="https://www.amazon.com/Blue-Snowball-Condenser-Microphone-Cardioid/dp/B014PYGTUQ/ref=pd_sbs_267_img_0/141-4904210-4469436?_encoding=UTF8&amp;pd_rd_i=B014PYGTUQ&amp;pd_rd_r=5869df98-67e3-442d-a8da-1f5b8c3dc437&amp;pd_rd_w=D89NE&amp;pd_rd_wg=KJb7d&amp;pf_rd_p=5cfcfe89-300f-47d2-b1ad-a4e27203a02a&amp;pf_rd_r=R2QY6WQTZKTPYSFCC1DA&amp;psc=1&amp;refRID=R2QY6WQTZKTPYSFCC1DA">Blue Yeti Snowball</a> on hand. (The Snowball is a solid entry-level podcast/vlogging microphone that’s really reasonably priced). In any event, you can go as basic or as fancy as you like. As long as you plug it in and it’s recognized by your computer, you can use it to record your audio.</p>
<p>Once you’ve plugged in your microphone (or headset) of choice, go back down to the <code>Sources</code> panel and click on the <code>+</code> again. This time, stay at the top and click the button that says <code>Audio Input Capture</code>. A new panel will pop open that will say something like “Create/Select Source.” Click <code>OK</code>. A new screen will pop up which will ask you which <code>Device</code> you want to use. If you are using a device (like a headset or dedicated microphone) that isn’t your computer’s default audio input channel, click the drop-down menu and select it by name.</p>
<p>Once you do that, click <code>OK</code>. You’ll now see a new item in the <code>Audio Mixer</code> pannel in the bottom-center of the screen. From here, you can mix the levels of your input channel and your desktop audio by moving the sliders. (If they’re further to the right, the audio from that source will be louder; further to the left and they’ll be softer.) My personal preference is to totally silence the audio coming from the Desktop (I don’t want the video to get random bings from Outlook and distract the viewers).</p>
<p align="center">
</p><p><img src="www.peterlicari.com/posts/covid-video-lecture-tutorial/images/6.gif" style="width:75.0%;height:75.0%"></p>
<p></p>
<p><br></p>
<p><a name="anchor6"></a>Now that you’ve got everything set up, you’re ready to record. From here you’ve got a couple of options. If you’re working on just one screen, you’re going to have to minimize OBS during recording so that you avoid the infinite recursion. <em>That’s totally fine. OBS will continue recording after you minimize the program so long as you don’t exit out of it entirely.</em> But you will have the infinite loop for however long it takes for you to click <code>Start Recording</code> and minimize in the beginning <strong>and</strong> to restore the window and click <code>Stop Recording</code> at the end. If you think your students won’t mind—although, I’ll be candid and tell you that they probably will—you could just leave it in. If you have a video editor (like iMovie), you could just chop those bits off and re-export it. Or, my preferred option, you can set it up so that you can minimize the program, press a specific button on your keyboard, and start recording without anyone having to see all the looping.</p>
<p>Go back to the lower-right part of the screen and click on the <code>Settings</code> button again. Go to the left-hand panel and click where it says <code>Hotkeys</code> (second item from the bottom). Go down to where it says <code>Start Recording</code> and click on the field to the right. Your mouse cursor should start blinking. Then press the button on your keyboard that you want to act as the shortcut for your recording command. I’m going to use <code>0</code> on my keyboard’s number pad, but you can use any key that you’d like. I’d just suggest not picking something that you might accidentally hit while presenting!</p>
<p>Once you’ve made your choice, click apply.</p>
<p>##<a name="anchor7"></a>Recording your Presentation</p>
<p>Now that you’ve got all of your settings ready to go, you’re ready to start recording your presentation! If you turned off the infinite loop, click the eye logo again to turn the visual feed back on. Then <em>minimize</em> (not <strong>exit</strong>) out of OBS Studio. Start up your presentation. Then, when you’re ready, press the button on your keyboard that starts your recording. (If you decided not to use the hotkeys, click <code>Start Recording</code> before you minimize out of OBS). Talk clearly into your microphone and make your way through the slides.</p>
<p align="center">
</p><p><img src="www.peterlicari.com/posts/covid-video-lecture-tutorial/images/8.gif" style="width:75.0%;height:75.0%"></p>
<p></p>
<p>Once you’ve finished, press the button on your keyboard that stops your recording. Reopen OBS. <strong>DO NOT IMMEDIATELY CLOSE THE PROGRAM.</strong> OBS Studio takes a while to encode your video into an mp4 format. If you close the program while it’s still in progress, you’ll just have a corrupted mess that can’t be opened let alone watched. Personally, I like to have my file viewer open to the directory that I decided to export my video to. It’ll update when the file has finished exporting.</p>
<p align="center">
</p><p><img src="www.peterlicari.com/posts/covid-video-lecture-tutorial/images/9.gif" style="width:75.0%;height:75.0%"></p>
<p></p>
<p>Once you’ve finished the video, you have something that you can upload to your preferred elearning platform (Blackboard or Canvas) or to YouTube. I uploaded a short demo to my personal YouTube (rather than to the <a href="https://www.youtube.com/c/professorpolitics">Professor Politics channel</a>) where I went through the first couple minutes of the lecture so you guys can see a “final” product.</p>
<p align="center">
<iframe width="560" height="315" src="https://www.youtube.com/embed/__rKku41JAg" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="">
</iframe>
</p>
<p><br></p>
</section>
<section id="tips-for-your-presentation" class="level2">
<h2 class="anchored" data-anchor-id="tips-for-your-presentation"><a name="anchor8"></a> Tips for Your Presentation</h2>
<p>As I ever-so-slyly referenced in the last paragraph, I’ve been making multimedia content for the web for a while now—pretty close to about 6-7 years. I’m not by any means an unimpeachable expert, but I’ve picked up a few things as I’ve gone along. So I wanted to pass along a few tips for when you’re recording your presentation:</p>
<ul>
<li><p><strong>Keep it brief:</strong> Unless you’ve got a helluva radio voice (and an engaging personality to boot), keep your presentation shorter rather than longer. The best video educators on YouTube don’t tend to go much longer than 10-15 minutes—and they’ve usually got some kind of visual animation and music to accompany them. You won’t keep your students’ eyes on the screen for much longer than that. Even if they do, their eyes will be totally glassed over or they’ll have Facebook open in another page. (That may not sound much different than class normally for some, but trust me. It is.) I know that’s frustrating because you probably have a lot more material than that. Trim it down as best you can.</p></li>
<li><p><strong>If you can’t keep it brief, do it in chunks:</strong> If you absolutely cannot cut your material down to below 10-15 minutes, make multiple, shorter videos. Find natural stopping points in your presentation and cut your videos down to about 5-7 minutes. Set up a silent alarm for about 6 minutes that’ll help you wrap it up. This technique won’t let you get away with uploading, like, 10 videos—but you can use it to upload 3-6 that’ll get far better engagement than if you just kept talking for 20-30 uninterrupted minutes.</p></li>
<li><p><strong>Don’t eat the mic:</strong> watch how close you’re getting to your audio input. You don’t want your lecture to get interrupted by crackles or Darth Vader-esque heavy breathing.</p></li>
<li><p><strong>Talk slower. Then talk slower than that:</strong> Some people (like me) are cursed with a rapid cadence. When we talk to people face-to-face, it’s easier to understand us because a lot of our meaning is translated through non-verbal means. But when it’s just you and the slides, fast talking will be the death of comprehension. Plus, if you’re not used to presenting using a microphone, you’re probably nervous about it. Even if you don’t think you’re nervous, you probably are. That’ll bleed over into how quickly you’re going through the material. So if you just finished a video and/or chunk and are thinking “wow, I sure managed to clear through those slides really quickly!”—you’re probably going to have to re-record it if you want students to know what the hell you were actually saying.</p></li>
<li><p><strong>Avoid being monotone:</strong> Your students probably understand that this isn’t what you signed-up for; no one’s asking for an Oscar-worthy performance. And unless you’ve got experience with acting, improv, or public speaking, it’ll probably come off as more cringy if you shoot for one. But don’t be like the teacher from <a href="https://www.youtube.com/watch?v=uhiCFdWeQfA"><em>Ferris Bueller’s Day Off</em></a>, droning on about the Smoot-Hawley Tariff Act. Try to add some variation in your voice every now and then. Change up your volume, pitch, and tone just as you would if you were speaking before a group.</p></li>
<li><p><strong>Don’t strive for perfection:</strong> Don’t try to make this a Ted Talk. Don’t try to make this a YouTube video. Don’t make this into a job talk or conference presentation. Don’t think that you have to have no pauses, no flubs, no imperfections. If you would say “oops, excuse me, what I meant was…” in class, you can say it here. It’s fine. 9 times out of 10, you’ll notice it far more than anyone else will.</p></li>
<li><p><strong>Practice before you upload:</strong> Do a couple of short practice runs (1-2 minutes) to make sure you’ve got your pacing, microphone placing, and all-around jitters sorted out before you dive in to the whole thing. As I mentioned, I’ve been doing this for years and I <em>still</em> have to do this. We all do. It’s better to get all the little kinks fixed before you upload your videos and you realize, to your sinking horror, there’s something that makes it utterly unwatchable.</p></li>
</ul>
<p><strong><em>This is probably going to be a stressful time for both you and your students. This transition (from offline to online) has been abrupt for and it’s having very real consequences on the day-to-day lives of everyone involved. Hopefully, this tutorial will be able to ease that transition, and diminish some of those smaller issues.</em></strong></p>
<p><br><br></p>


</section>
</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Depending on how updated your graphics drivers are, you might also have to change your <code>Encoder</code> settings from <code>Hardware</code> to <code>Software.</code> For what it’s worth, I had to do this—but your mileage will vary.↩︎</p></li>
<li id="fn2"><p>As a bonus, you’ll also see the gif capturing software I’m using for this tutorial, LICEcap in action.↩︎</p></li>
<li id="fn3"><p>I’m choosing to play Switzerland in the immemorial methods war.↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div quarto-reuse="quarto-reuse" class="quarto-appendix-contents"><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</a></div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{licari2020,
  author = {Peter Licari},
  title = {Capturing a {PowerPoint/Google} {Slides} {Lecture} with
    {Open} {Source} {Software}},
  date = {2020-03-10},
  url = {www.peterlicari.com/posts/covid-video-lecture-tutorial},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-licari2020" class="csl-entry quarto-appendix-citeas">
Peter Licari. 2020. <span>“Capturing a PowerPoint/Google Slides Lecture
with Open Source Software.”</span> March 10, 2020. <a href="https://www.peterlicari.com/posts/covid-video-lecture-tutorial">www.peterlicari.com/posts/covid-video-lecture-tutorial</a>.
</div></div></section></div> ]]></description>
  <category>tutorial</category>
  <category>teaching</category>
  <guid>www.peterlicari.com/posts/covid-video-lecture-tutorial/index.html</guid>
  <pubDate>Tue, 10 Mar 2020 04:00:00 GMT</pubDate>
  <media:content url="www.peterlicari.com/posts/covid-video-lecture-tutorial/images/1.gif" medium="image" type="image/gif"/>
</item>
</channel>
</rss>
