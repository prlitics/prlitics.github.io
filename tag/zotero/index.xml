<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zotero | Peter Licari</title>
    <link>/tag/zotero/</link>
      <atom:link href="/tag/zotero/index.xml" rel="self" type="application/rss+xml" />
    <description>Zotero</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Wed, 17 Jun 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu7822abfb2f54ce27e2589169adb56259_3245_512x512_fill_lanczos_center_2.png</url>
      <title>Zotero</title>
      <link>/tag/zotero/</link>
    </image>
    
    <item>
      <title>How to Remove URLS from Zotero Bibtex</title>
      <link>/til_post/how-to-remove-urls-from-zotero-bibtex/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/til_post/how-to-remove-urls-from-zotero-bibtex/</guid>
      <description>
&lt;script src=&#34;/til_post/how-to-remove-urls-from-zotero-bibtex/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;I’m currently in the process of transitioning my dissertation from LibreOffice into &lt;em&gt;LaTeX&lt;/em&gt; because &lt;del&gt;I like pain&lt;/del&gt; it’s a lot easier to finagle all of the images and tables while making sure that I’m keeping in-line with the grad school’s style formatting requirements. I’m currently using &lt;a href=&#34;https://www.zotero.org/&#34;&gt;Zotero&lt;/a&gt; to manage all of my citations. I went to just do a cursory check on how my bibliography rendered and here’s what I found:&lt;/p&gt;
&lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;images/1.PNG&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;Yikes! URLS for the webpages for journal articles! While I’m personally pretty ambivalent towards it, that’s not something that style-guideline sticklers are gonna abide. I’d like for it to only export the URL from web sources—blogs, news articles, videos and the like—while nixing the export for others.&lt;/p&gt;
&lt;p&gt;Surprisingly, there isn’t an option in the Zotero App for this functionality. I came across this awesome post &lt;a href=&#34;https://vxlabs.com/2012/06/29/removing-urls-from-zotero-bibtex-exports/&#34;&gt;from vxlabs&lt;/a&gt; that provided the code and approach that inspired this post. Their suggestion:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Go to Preferences | Advanced and click on the “Show Data Directory” button.&lt;/li&gt;
&lt;li&gt;Edit translators/BibTeX.js with your favourite text editor.&lt;/li&gt;
&lt;li&gt;In function doExport(), at around line 2040 in Zotero 3.0.7, change the “for (var field in fieldMap)” loop by adding a single line of code like this:&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;then provided the following code:&lt;/p&gt;
&lt;pre class=&#34;js&#34;&gt;&lt;code&gt;for(var field in fieldMap) {
    # only add the following line:
    if (field == &amp;quot;url&amp;quot;) continue;
    if(item[fieldMap[field]]) {
        writeField(field, item[fieldMap[field]]);
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
for(var field in fieldMap) {
    # only add the following line:
    if (field == &#34;url&#34;) continue;
    if(item[fieldMap[field]]) {
        writeField(field, item[fieldMap[field]]);
    }
}
&lt;/script&gt;
&lt;p&gt;This fix makes a lot of sense! The code is just saying “hey Zotero. Just go ahead and &lt;code&gt;continue&lt;/code&gt; past the &lt;strong&gt;url&lt;/strong&gt; field when writing Bibtex entries.” It was almost perfect for my needs sans one small tick—it &lt;em&gt;also&lt;/em&gt; nixed the urls off of webpages!&lt;/p&gt;
&lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;images/2.PNG&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;So in order to make it perfect (that is: in order to make it so that it skips the URLs for everything but the entries coming from webpages), you just got to add this amended text.&lt;/p&gt;
&lt;pre class=&#34;js&#34;&gt;&lt;code&gt;        for (var field in fieldMap) {
            if (field == &amp;quot;url&amp;quot; &amp;amp; item.itemType != &amp;quot;webpage&amp;quot;) continue;
            if (item[fieldMap[field]]) {
                writeField(field, item[fieldMap[field]]);
            }&lt;/code&gt;&lt;/pre&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
        for (var field in fieldMap) {
            if (field == &#34;url&#34; &amp; item.itemType != &#34;webpage&#34;) continue;
            if (item[fieldMap[field]]) {
                writeField(field, item[fieldMap[field]]);
            }
&lt;/script&gt;
&lt;p&gt;The extra bit just tells the exporter “hey! &lt;code&gt;continue&lt;/code&gt; on along past the URL field &lt;strong&gt;only&lt;/strong&gt; when the item type &lt;em&gt;isn’t&lt;/em&gt; a webpage.” Let’s see how it works!&lt;/p&gt;
&lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;images/3.PNG&#34; /&gt;
&lt;/p&gt;
&lt;p align=&#34;center&#34;&gt;
&lt;img src=&#34;images/4.PNG&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
